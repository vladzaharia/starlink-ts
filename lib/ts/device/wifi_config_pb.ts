// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file spacex_api/device/wifi_config.proto (package SpaceX.API.Device, syntax proto3)

import type { GenEnum, GenFile, GenMessage } from '@bufbuild/protobuf/codegenv1';
import { enumDesc, fileDesc, messageDesc } from '@bufbuild/protobuf/codegenv1';
import type { PublicKey } from './command_pb';
import { file_spacex_api_device_command } from './command_pb';
import type { BootInfo } from './common_pb';
import { file_spacex_api_device_common } from './common_pb';
import type { IfaceType, Protocol, TxPowerLevel } from './wifi_util_pb';
import { file_spacex_api_device_wifi_util } from './wifi_util_pb';
import type { Message } from '@bufbuild/protobuf';

/**
 * Describes the file spacex_api/device/wifi_config.proto.
 */
export const file_spacex_api_device_wifi_config: GenFile =
  /*@__PURE__*/
  fileDesc(
    '',
    [
      file_spacex_api_device_command,
      file_spacex_api_device_common,
      file_spacex_api_device_wifi_util,
    ]
  );

/**
 * @generated from message SpaceX.API.Device.MeshConfig
 */
export type MeshConfig = Message<'SpaceX.API.Device.MeshConfig'> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: bool apply_display_name = 2;
   */
  applyDisplayName: boolean;

  /**
   * @generated from field: SpaceX.API.Device.MeshAuth auth = 3;
   */
  auth: MeshAuth;

  /**
   * @generated from field: bool apply_auth = 4;
   */
  applyAuth: boolean;

  /**
   * @generated from field: int64 last_connected = 5;
   */
  lastConnected: bigint;

  /**
   * @generated from field: uint64 incarnation = 7;
   */
  incarnation: bigint;

  /**
   * @generated from field: string hardware_version = 9;
   */
  hardwareVersion: string;

  /**
   * @generated from field: bool supports_5ghz_high = 10;
   */
  supports5ghzHigh: boolean;
};

/**
 * Describes the message SpaceX.API.Device.MeshConfig.
 * Use `create(MeshConfigSchema)` to create a new message.
 */
export const MeshConfigSchema: GenMessage<MeshConfig> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 0);

/**
 * @generated from message SpaceX.API.Device.TlsConfig
 */
export type TlsConfig = Message<'SpaceX.API.Device.TlsConfig'> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string cert = 2;
   */
  cert: string;

  /**
   * @generated from field: string client_ca_cert = 3;
   */
  clientCaCert: string;

  /**
   * @generated from field: string server_ca_cert = 4;
   */
  serverCaCert: string;
};

/**
 * Describes the message SpaceX.API.Device.TlsConfig.
 * Use `create(TlsConfigSchema)` to create a new message.
 */
export const TlsConfigSchema: GenMessage<TlsConfig> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 1);

/**
 * @generated from message SpaceX.API.Device.HttpServer
 */
export type HttpServer = Message<'SpaceX.API.Device.HttpServer'> & {
  /**
   * @generated from field: string domain_name = 1;
   */
  domainName: string;

  /**
   * @generated from field: SpaceX.API.Device.TlsConfig tls = 2;
   */
  tls?: TlsConfig;

  /**
   * @generated from field: string file_content_id = 3;
   */
  fileContentId: string;

  /**
   * @generated from field: string file_content_hash = 4;
   */
  fileContentHash: string;

  /**
   * @generated from field: repeated string access_control_allow_origins = 5;
   */
  accessControlAllowOrigins: string[];
};

/**
 * Describes the message SpaceX.API.Device.HttpServer.
 * Use `create(HttpServerSchema)` to create a new message.
 */
export const HttpServerSchema: GenMessage<HttpServer> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 2);

/**
 * @generated from message SpaceX.API.Device.CaptivePortal
 */
export type CaptivePortal = Message<'SpaceX.API.Device.CaptivePortal'> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: bool display_in_captive_browser = 2;
   */
  displayInCaptiveBrowser: boolean;
};

/**
 * Describes the message SpaceX.API.Device.CaptivePortal.
 * Use `create(CaptivePortalSchema)` to create a new message.
 */
export const CaptivePortalSchema: GenMessage<CaptivePortal> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 3);

/**
 * @generated from message SpaceX.API.Device.WifiConfig
 */
export type WifiConfig = Message<'SpaceX.API.Device.WifiConfig'> & {
  /**
   * @generated from field: string country_code = 3;
   */
  countryCode: string;

  /**
   * @generated from field: bool apply_country_code = 1085;
   */
  applyCountryCode: boolean;

  /**
   * @generated from field: bool pin_country_code = 53;
   */
  pinCountryCode: boolean;

  /**
   * @generated from field: bool apply_pin_country_code = 1086;
   */
  applyPinCountryCode: boolean;

  /**
   * @generated from field: bool custom_power_table = 54;
   */
  customPowerTable: boolean;

  /**
   * @generated from field: bool apply_custom_power_table = 1087;
   */
  applyCustomPowerTable: boolean;

  /**
   * @generated from field: bool setup_complete = 7;
   */
  setupComplete: boolean;

  /**
   * @generated from field: bool apply_setup_complete = 1010;
   */
  applySetupComplete: boolean;

  /**
   * @generated from field: uint32 version = 9;
   */
  version: number;

  /**
   * @generated from field: string mac_wan = 12;
   */
  macWan: string;

  /**
   * @generated from field: string mac_lan = 13;
   */
  macLan: string;

  /**
   * @generated from field: uint32 channel_2ghz = 19;
   */
  channel2ghz: number;

  /**
   * @generated from field: bool apply_channel_2ghz = 1013;
   */
  applyChannel2ghz: boolean;

  /**
   * @generated from field: uint32 channel_5ghz = 20;
   */
  channel5ghz: number;

  /**
   * @generated from field: bool apply_channel_5ghz = 1014;
   */
  applyChannel5ghz: boolean;

  /**
   * @generated from field: uint32 channel_5ghz_high = 57;
   */
  channel5ghzHigh: number;

  /**
   * @generated from field: bool apply_channel_5ghz_high = 1016;
   */
  applyChannel5ghzHigh: boolean;

  /**
   * @generated from field: map<string, SpaceX.API.Device.MeshConfig> mesh_configs = 33;
   */
  meshConfigs: { [key: string]: MeshConfig };

  /**
   * @generated from field: map<string, SpaceX.API.Device.MeshConfig> mesh_configs_updates = 3033;
   */
  meshConfigsUpdates: { [key: string]: MeshConfig };

  /**
   * @generated from field: bool apply_mesh_configs = 1033;
   */
  applyMeshConfigs: boolean;

  /**
   * @generated from field: repeated SpaceX.API.Device.PublicKey dynamic_keys = 22;
   */
  dynamicKeys: PublicKey[];

  /**
   * @generated from field: bool apply_dynamic_keys = 39;
   */
  applyDynamicKeys: boolean;

  /**
   * @generated from field: bool is_repeater = 23;
   */
  isRepeater: boolean;

  /**
   * @generated from field: bool apply_is_repeater = 1031;
   */
  applyIsRepeater: boolean;

  /**
   * @generated from field: bool ap_mode = 51;
   */
  apMode: boolean;

  /**
   * @generated from field: bool apply_ap_mode = 1066;
   */
  applyApMode: boolean;

  /**
   * @generated from field: bool is_aviation = 49;
   */
  isAviation: boolean;

  /**
   * @generated from field: bool apply_is_aviation = 1064;
   */
  applyIsAviation: boolean;

  /**
   * @generated from field: int32 boot_count = 26;
   */
  bootCount: number;

  /**
   * @generated from field: SpaceX.API.Device.BootInfo boot = 3001;
   */
  boot?: BootInfo;

  /**
   * @generated from field: repeated string nameservers = 30;
   */
  nameservers: string[];

  /**
   * @generated from field: bool apply_nameservers = 1054;
   */
  applyNameservers: boolean;

  /**
   * @generated from field: bool secure_dns = 50;
   */
  secureDns: boolean;

  /**
   * @generated from field: bool apply_secure_dns = 1065;
   */
  applySecureDns: boolean;

  /**
   * @generated from field: bool bypass_mode = 31;
   */
  bypassMode: boolean;

  /**
   * @generated from field: bool apply_bypass_mode = 1055;
   */
  applyBypassMode: boolean;

  /**
   * @generated from field: bool dfs_enabled = 42;
   */
  dfsEnabled: boolean;

  /**
   * @generated from field: bool apply_dfs_enabled = 1058;
   */
  applyDfsEnabled: boolean;

  /**
   * @generated from field: bool disable_mesh_onboarding = 52;
   */
  disableMeshOnboarding: boolean;

  /**
   * @generated from field: bool apply_disable_mesh_onboarding = 1067;
   */
  applyDisableMeshOnboarding: boolean;

  /**
   * @generated from field: bool disable_wireless_mesh_onboarding = 1097;
   */
  disableWirelessMeshOnboarding: boolean;

  /**
   * @generated from field: bool apply_disable_wireless_mesh_onboarding = 1098;
   */
  applyDisableWirelessMeshOnboarding: boolean;

  /**
   * @generated from field: bool apply_http_server = 1107;
   */
  applyHttpServer: boolean;

  /**
   * @generated from field: SpaceX.API.Device.HttpServer http_server = 1108;
   */
  httpServer?: HttpServer;

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.Network networks = 1100;
   */
  networks: WifiConfig_Network[];

  /**
   * @generated from field: bool apply_networks = 1101;
   */
  applyNetworks: boolean;

  /**
   * @generated from field: uint64 incarnation = 43;
   */
  incarnation: bigint;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_2ghz = 44;
   */
  wirelessMode2ghz: WifiConfig_WirelessMode;

  /**
   * @generated from field: bool apply_wireless_mode_2ghz = 1059;
   */
  applyWirelessMode2ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_5ghz = 45;
   */
  wirelessMode5ghz: WifiConfig_WirelessMode;

  /**
   * @generated from field: bool apply_wireless_mode_5ghz = 1060;
   */
  applyWirelessMode5ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_5ghz_high = 58;
   */
  wirelessMode5ghzHigh: WifiConfig_WirelessMode;

  /**
   * @generated from field: bool apply_wireless_mode_5ghz_high = 1070;
   */
  applyWirelessMode5ghzHigh: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_2ghz = 46;
   */
  htBandwidth2ghz: WifiConfig_HTBandwidth;

  /**
   * @generated from field: bool apply_ht_bandwidth_2ghz = 1061;
   */
  applyHtBandwidth2ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_5ghz = 47;
   */
  htBandwidth5ghz: WifiConfig_HTBandwidth;

  /**
   * @generated from field: bool apply_ht_bandwidth_5ghz = 1062;
   */
  applyHtBandwidth5ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_5ghz_high = 59;
   */
  htBandwidth5ghzHigh: WifiConfig_HTBandwidth;

  /**
   * @generated from field: bool apply_ht_bandwidth_5ghz_high = 1071;
   */
  applyHtBandwidth5ghzHigh: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.VHTBandwidth vht_bandwidth = 48;
   */
  vhtBandwidth: WifiConfig_VHTBandwidth;

  /**
   * @generated from field: bool apply_vht_bandwidth = 1063;
   */
  applyVhtBandwidth: boolean;

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.VHTBandwidth vht_bandwidth_5ghz_high = 60;
   */
  vhtBandwidth5ghzHigh: WifiConfig_VHTBandwidth;

  /**
   * @generated from field: bool apply_vht_bandwidth_5ghz_high = 1072;
   */
  applyVhtBandwidth5ghzHigh: boolean;

  /**
   * @generated from field: bool use_public_services = 55;
   */
  usePublicServices: boolean;

  /**
   * @generated from field: bool apply_use_public_services = 1068;
   */
  applyUsePublicServices: boolean;

  /**
   * @generated from field: bool disable_automated_speedtests = 56;
   */
  disableAutomatedSpeedtests: boolean;

  /**
   * @generated from field: bool apply_disable_automated_speedtests = 1069;
   */
  applyDisableAutomatedSpeedtests: boolean;

  /**
   * @generated from field: bool enable_umbilical_vlan = 61;
   */
  enableUmbilicalVlan: boolean;

  /**
   * @generated from field: bool apply_enable_umbilical_vlan = 1073;
   */
  applyEnableUmbilicalVlan: boolean;

  /**
   * @generated from field: repeated SpaceX.API.Device.ClientName client_names = 62 [deprecated = true];
   * @deprecated
   */
  clientNames: ClientName[];

  /**
   * @generated from field: bool apply_client_names = 1074 [deprecated = true];
   * @deprecated
   */
  applyClientNames: boolean;

  /**
   * @generated from field: bool outdoor_mode = 63;
   */
  outdoorMode: boolean;

  /**
   * @generated from field: bool apply_outdoor_mode = 1075;
   */
  applyOutdoorMode: boolean;

  /**
   * @generated from field: bool disable_2ghz = 64;
   */
  disable2ghz: boolean;

  /**
   * @generated from field: bool apply_disable_2ghz = 1076;
   */
  applyDisable2ghz: boolean;

  /**
   * @generated from field: bool disable_5ghz = 65;
   */
  disable5ghz: boolean;

  /**
   * @generated from field: bool apply_disable_5ghz = 1077;
   */
  applyDisable5ghz: boolean;

  /**
   * @generated from field: bool disable_5ghz_high = 66;
   */
  disable5ghzHigh: boolean;

  /**
   * @generated from field: bool apply_disable_5ghz_high = 1078;
   */
  applyDisable5ghzHigh: boolean;

  /**
   * @generated from field: bool disable_x_mesh_backhaul = 67;
   */
  disableXMeshBackhaul: boolean;

  /**
   * @generated from field: bool apply_disable_x_mesh_backhaul = 1079;
   */
  applyDisableXMeshBackhaul: boolean;

  /**
   * @generated from field: string golden_bssid = 68 [deprecated = true];
   * @deprecated
   */
  goldenBssid: string;

  /**
   * @generated from field: bool apply_golden_bssid = 1080 [deprecated = true];
   * @deprecated
   */
  applyGoldenBssid: boolean;

  /**
   * @generated from field: SpaceX.API.Device.IfaceType golden_iface_type = 69 [deprecated = true];
   * @deprecated
   */
  goldenIfaceType: IfaceType;

  /**
   * @generated from field: bool apply_golden_iface_type = 1081 [deprecated = true];
   * @deprecated
   */
  applyGoldenIfaceType: boolean;

  /**
   * @generated from field: SpaceX.API.Device.TxPowerLevel tx_power_level_2ghz = 70;
   */
  txPowerLevel2ghz: TxPowerLevel;

  /**
   * @generated from field: bool apply_tx_power_level_2ghz = 1082;
   */
  applyTxPowerLevel2ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.TxPowerLevel tx_power_level_5ghz = 71;
   */
  txPowerLevel5ghz: TxPowerLevel;

  /**
   * @generated from field: bool apply_tx_power_level_5ghz = 1083;
   */
  applyTxPowerLevel5ghz: boolean;

  /**
   * @generated from field: SpaceX.API.Device.TxPowerLevel tx_power_level_5ghz_high = 72;
   */
  txPowerLevel5ghzHigh: TxPowerLevel;

  /**
   * @generated from field: bool apply_tx_power_level_5ghz_high = 1084;
   */
  applyTxPowerLevel5ghzHigh: boolean;

  /**
   * @generated from field: bool disable_pending_update_reboot = 73;
   */
  disablePendingUpdateReboot: boolean;

  /**
   * @generated from field: bool apply_disable_pending_update_reboot = 1088;
   */
  applyDisablePendingUpdateReboot: boolean;

  /**
   * @generated from field: repeated SpaceX.API.Device.ClientConfig client_configs = 74;
   */
  clientConfigs: ClientConfig[];

  /**
   * @generated from field: bool apply_client_configs = 1089;
   */
  applyClientConfigs: boolean;

  /**
   * @generated from field: bool disable_set_wifi_config_from_controller = 75;
   */
  disableSetWifiConfigFromController: boolean;

  /**
   * @generated from field: bool apply_disable_set_wifi_config_from_controller = 1090;
   */
  applyDisableSetWifiConfigFromController: boolean;

  /**
   * @generated from field: bytes client_key = 76;
   */
  clientKey: Uint8Array;

  /**
   * @generated from field: bool apply_client_key = 1091;
   */
  applyClientKey: boolean;

  /**
   * @generated from oneof SpaceX.API.Device.WifiConfig.wan_traffic_control
   */
  wanTrafficControl:
    | {
        /**
         * @generated from field: SpaceX.API.Device.NoTrafficControl wan_no_traffic_control = 4001;
         */
        value: NoTrafficControl;
        case: 'wanNoTrafficControl';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AckSuppression wan_ack_suppression = 4002;
         */
        value: AckSuppression;
        case: 'wanAckSuppression';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.CakeRateLimit wan_cake_rate_limit = 4003;
         */
        value: CakeRateLimit;
        case: 'wanCakeRateLimit';
      }
    | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool apply_wan_traffic_control = 1092;
   */
  applyWanTrafficControl: boolean;

  /**
   * @generated from field: int32 wan_host_dscp_mark = 77;
   */
  wanHostDscpMark: number;

  /**
   * @generated from field: bool apply_wan_host_dscp_mark = 1093;
   */
  applyWanHostDscpMark: boolean;

  /**
   * @generated from field: bool debug_pop_pings = 79;
   */
  debugPopPings: boolean;

  /**
   * @generated from field: bool apply_debug_pop_pings = 1095;
   */
  applyDebugPopPings: boolean;

  /**
   * @generated from field: bool debug_pings = 94;
   */
  debugPings: boolean;

  /**
   * @generated from field: bool apply_debug_pings = 1106;
   */
  applyDebugPings: boolean;

  /**
   * @generated from field: bool client_tester = 80;
   */
  clientTester: boolean;

  /**
   * @generated from field: bool apply_client_tester = 1096;
   */
  applyClientTester: boolean;

  /**
   * @generated from field: uint32 asset_class = 81;
   */
  assetClass: number;

  /**
   * @generated from field: bool apply_asset_class = 1099;
   */
  applyAssetClass: boolean;

  /**
   * @generated from field: bool disable_band_steering = 95;
   */
  disableBandSteering: boolean;

  /**
   * @generated from field: bool apply_disable_band_steering = 1109;
   */
  applyDisableBandSteering: boolean;

  /**
   * @generated from field: repeated string only_overflight_countries = 1110;
   */
  onlyOverflightCountries: string[];

  /**
   * @generated from field: bool apply_only_overflight_countries = 1111;
   */
  applyOnlyOverflightCountries: boolean;

  /**
   * @generated from field: bool only_overflight_countries_using_default = 1114;
   */
  onlyOverflightCountriesUsingDefault: boolean;

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.UnbridgedEthPort unbridged_eth_ports = 1112;
   */
  unbridgedEthPorts: WifiConfig_UnbridgedEthPort[];

  /**
   * @generated from field: bool apply_unbridged_eth_ports = 1113;
   */
  applyUnbridgedEthPorts: boolean;

  /**
   * @generated from field: bool disable_sandbox_fail_open = 1115;
   */
  disableSandboxFailOpen: boolean;

  /**
   * @generated from field: bool apply_disable_sandbox_fail_open = 1116;
   */
  applyDisableSandboxFailOpen: boolean;

  /**
   * @generated from field: uint32 tag = 78;
   */
  tag: number;

  /**
   * @generated from field: bool custom_dns_disabled = 1117;
   */
  customDnsDisabled: boolean;

  /**
   * @generated from field: bool apply_custom_dns_disabled = 1118 [deprecated = true];
   * @deprecated
   */
  applyCustomDnsDisabled: boolean;
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.
 * Use `create(WifiConfigSchema)` to create a new message.
 */
export const WifiConfigSchema: GenMessage<WifiConfig> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.BasicServiceSet
 */
export type WifiConfig_BasicServiceSet = Message<'SpaceX.API.Device.WifiConfig.BasicServiceSet'> & {
  /**
   * @generated from field: string bssid = 1003;
   */
  bssid: string;

  /**
   * @generated from field: string ssid = 1005;
   */
  ssid: string;

  /**
   * @generated from oneof SpaceX.API.Device.WifiConfig.BasicServiceSet.auth
   */
  auth:
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthOpen auth_open = 2001;
         */
        value: AuthOpen;
        case: 'authOpen';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthWpa2 auth_wpa2 = 2002;
         */
        value: AuthWpa2;
        case: 'authWpa2';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthWpa3 auth_wpa3 = 2003;
         */
        value: AuthWpa3;
        case: 'authWpa3';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthWpa2Wpa3 auth_wpa2_wpa3 = 2004;
         */
        value: AuthWpa2Wpa3;
        case: 'authWpa2Wpa3';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthRadius auth_radius = 2005;
         */
        value: AuthRadius;
        case: 'authRadius';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthOpenEncrypted auth_open_encrypted = 2006;
         */
        value: AuthOpenEncrypted;
        case: 'authOpenEncrypted';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.AuthOnboardRadius auth_onboard_radius = 2007;
         */
        value: AuthOnboardRadius;
        case: 'authOnboardRadius';
      }
    | { case: undefined; value?: undefined };

  /**
   * @generated from field: SpaceX.API.Device.WifiConfig.Band band = 1011;
   */
  band: WifiConfig_Band;

  /**
   * @generated from field: string iface_name = 1017;
   */
  ifaceName: string;

  /**
   * @generated from field: bool disable = 1013;
   */
  disable: boolean;

  /**
   * @generated from field: bool hidden = 1015;
   */
  hidden: boolean;
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.BasicServiceSet.
 * Use `create(WifiConfig_BasicServiceSetSchema)` to create a new message.
 */
export const WifiConfig_BasicServiceSetSchema: GenMessage<WifiConfig_BasicServiceSet> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 0);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.DnsStaticEntry
 */
export type WifiConfig_DnsStaticEntry = Message<'SpaceX.API.Device.WifiConfig.DnsStaticEntry'> & {
  /**
   * @generated from field: repeated string domains = 1000;
   */
  domains: string[];

  /**
   * @generated from field: repeated string addresses = 1001;
   */
  addresses: string[];
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.DnsStaticEntry.
 * Use `create(WifiConfig_DnsStaticEntrySchema)` to create a new message.
 */
export const WifiConfig_DnsStaticEntrySchema: GenMessage<WifiConfig_DnsStaticEntry> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 1);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.DnsForwardRule
 */
export type WifiConfig_DnsForwardRule = Message<'SpaceX.API.Device.WifiConfig.DnsForwardRule'> & {
  /**
   * @generated from field: repeated string domains = 1000;
   */
  domains: string[];

  /**
   * @generated from field: repeated string server_addresses = 1001;
   */
  serverAddresses: string[];
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.DnsForwardRule.
 * Use `create(WifiConfig_DnsForwardRuleSchema)` to create a new message.
 */
export const WifiConfig_DnsForwardRuleSchema: GenMessage<WifiConfig_DnsForwardRule> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 2);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.StaticRoute
 */
export type WifiConfig_StaticRoute = Message<'SpaceX.API.Device.WifiConfig.StaticRoute'> & {
  /**
   * @generated from field: string subnet = 1;
   */
  subnet: string;

  /**
   * @generated from field: string gateway = 2;
   */
  gateway: string;
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.StaticRoute.
 * Use `create(WifiConfig_StaticRouteSchema)` to create a new message.
 */
export const WifiConfig_StaticRouteSchema: GenMessage<WifiConfig_StaticRoute> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 3);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.Network
 */
export type WifiConfig_Network = Message<'SpaceX.API.Device.WifiConfig.Network'> & {
  /**
   * @generated from field: string ipv4 = 1003;
   */
  ipv4: string;

  /**
   * @generated from field: uint32 dhcpv4_start = 1012;
   */
  dhcpv4Start: number;

  /**
   * @generated from field: uint32 dhcpv4_end = 1025;
   */
  dhcpv4End: number;

  /**
   * @generated from field: bool dhcp_disabled = 1015;
   */
  dhcpDisabled: boolean;

  /**
   * @generated from field: uint32 dhcpv4_lease_duration_s = 1016;
   */
  dhcpv4LeaseDurationS: number;

  /**
   * @generated from field: string domain = 1011;
   */
  domain: string;

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.BasicServiceSet basic_service_sets = 1007;
   */
  basicServiceSets: WifiConfig_BasicServiceSet[];

  /**
   * @generated from field: bool client_isolation = 1008;
   */
  clientIsolation: boolean;

  /**
   * @generated from field: bool guest = 1009;
   */
  guest: boolean;

  /**
   * @generated from field: string landing = 1010;
   */
  landing: string;

  /**
   * @generated from field: bool landing_page_v2 = 1017;
   */
  landingPageV2: boolean;

  /**
   * @generated from field: bool sandbox_enabled = 1020;
   */
  sandboxEnabled: boolean;

  /**
   * @generated from field: repeated string sandbox_domain_allow_list = 1022;
   */
  sandboxDomainAllowList: string[];

  /**
   * @generated from field: uint32 sandbox_id = 1023;
   */
  sandboxId: number;

  /**
   * @generated from field: bool internal = 1013;
   */
  internal: boolean;

  /**
   * @generated from field: uint32 vlan = 1014;
   */
  vlan: number;

  /**
   * @generated from field: SpaceX.API.Device.CaptivePortal captive_portal = 1024;
   */
  captivePortal?: CaptivePortal;

  /**
   * @generated from field: uint32 network_groups = 1026;
   */
  networkGroups: number;

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.DnsStaticEntry dns_static_entries = 1027;
   */
  dnsStaticEntries: WifiConfig_DnsStaticEntry[];

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.DnsForwardRule dns_forward_rules = 1028;
   */
  dnsForwardRules: WifiConfig_DnsForwardRule[];

  /**
   * @generated from field: bool disable_when_offline_old = 1029 [deprecated = true];
   * @deprecated
   */
  disableWhenOfflineOld: boolean;

  /**
   * @generated from field: repeated SpaceX.API.Device.WifiConfig.StaticRoute static_routes = 1030;
   */
  staticRoutes: WifiConfig_StaticRoute[];

  /**
   * @generated from field: bool disable_when_offline = 1031;
   */
  disableWhenOffline: boolean;

  /**
   * @generated from field: SpaceX.API.Device.TlsConfig onboard_radius_tls_config = 1032;
   */
  onboardRadiusTlsConfig?: TlsConfig;
};

/**
 * Describes the message SpaceX.API.Device.WifiConfig.Network.
 * Use `create(WifiConfig_NetworkSchema)` to create a new message.
 */
export const WifiConfig_NetworkSchema: GenMessage<WifiConfig_Network> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 4);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.UnbridgedEthPort
 */
export type WifiConfig_UnbridgedEthPort =
  Message<'SpaceX.API.Device.WifiConfig.UnbridgedEthPort'> & {
    /**
     * @generated from field: uint32 lan_port_index = 1;
     */
    lanPortIndex: number;

    /**
     * @generated from field: string ip = 2;
     */
    ip: string;

    /**
     * @generated from field: string gateway = 3;
     */
    gateway: string;

    /**
     * @generated from field: repeated SpaceX.API.Device.WifiConfig.UnbridgedEthPort.StaticRoute static_routes = 4;
     */
    staticRoutes: WifiConfig_UnbridgedEthPort_StaticRoute[];

    /**
     * @generated from oneof SpaceX.API.Device.WifiConfig.UnbridgedEthPort.wan
     */
    wan:
      | {
          /**
           * @generated from field: SpaceX.API.Device.WanNone wan_none = 5;
           */
          value: WanNone;
          case: 'wanNone';
        }
      | {
          /**
           * @generated from field: SpaceX.API.Device.WanStarlinkRouterPair wan_starlink_router_pair = 6;
           */
          value: WanStarlinkRouterPair;
          case: 'wanStarlinkRouterPair';
        }
      | { case: undefined; value?: undefined };
  };

/**
 * Describes the message SpaceX.API.Device.WifiConfig.UnbridgedEthPort.
 * Use `create(WifiConfig_UnbridgedEthPortSchema)` to create a new message.
 */
export const WifiConfig_UnbridgedEthPortSchema: GenMessage<WifiConfig_UnbridgedEthPort> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 5);

/**
 * @generated from message SpaceX.API.Device.WifiConfig.UnbridgedEthPort.StaticRoute
 */
export type WifiConfig_UnbridgedEthPort_StaticRoute =
  Message<'SpaceX.API.Device.WifiConfig.UnbridgedEthPort.StaticRoute'> & {
    /**
     * @generated from field: string subnet = 1;
     */
    subnet: string;

    /**
     * @generated from field: uint32 network_groups = 2;
     */
    networkGroups: number;
  };

/**
 * Describes the message SpaceX.API.Device.WifiConfig.UnbridgedEthPort.StaticRoute.
 * Use `create(WifiConfig_UnbridgedEthPort_StaticRouteSchema)` to create a new message.
 */
export const WifiConfig_UnbridgedEthPort_StaticRouteSchema: GenMessage<WifiConfig_UnbridgedEthPort_StaticRoute> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 4, 5, 0);

/**
 * @generated from enum SpaceX.API.Device.WifiConfig.Security
 */
export enum WifiConfig_Security {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: WPA2 = 1;
   */
  WPA2 = 1,

  /**
   * @generated from enum value: WPA3 = 2;
   */
  WPA3 = 2,

  /**
   * @generated from enum value: WPA2WPA3 = 3;
   */
  WPA2WPA3 = 3,
}

/**
 * Describes the enum SpaceX.API.Device.WifiConfig.Security.
 */
export const WifiConfig_SecuritySchema: GenEnum<WifiConfig_Security> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 4, 0);

/**
 * @generated from enum SpaceX.API.Device.WifiConfig.Band
 */
export enum WifiConfig_Band {
  /**
   * @generated from enum value: RF_UNKNOWN = 0;
   */
  RF_UNKNOWN = 0,

  /**
   * @generated from enum value: RF_2GHZ = 2;
   */
  RF_2GHZ = 2,

  /**
   * @generated from enum value: RF_5GHZ = 5;
   */
  RF_5GHZ = 5,

  /**
   * @generated from enum value: RF_5GHZ_HIGH = 6;
   */
  RF_5GHZ_HIGH = 6,
}

/**
 * Describes the enum SpaceX.API.Device.WifiConfig.Band.
 */
export const WifiConfig_BandSchema: GenEnum<WifiConfig_Band> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 4, 1);

/**
 * @generated from enum SpaceX.API.Device.WifiConfig.WirelessMode
 */
export enum WifiConfig_WirelessMode {
  /**
   * @generated from enum value: WIRELESS_MODE_DEFAULT = 0;
   */
  WIRELESS_MODE_DEFAULT = 0,

  /**
   * @generated from enum value: A_ONLY = 1;
   */
  A_ONLY = 1,

  /**
   * @generated from enum value: B_ONLY = 2;
   */
  B_ONLY = 2,

  /**
   * @generated from enum value: G_ONLY = 3;
   */
  G_ONLY = 3,

  /**
   * @generated from enum value: N_ONLY = 4;
   */
  N_ONLY = 4,

  /**
   * @generated from enum value: B_G_MIXED = 5;
   */
  B_G_MIXED = 5,

  /**
   * @generated from enum value: A_N_MIXED = 6;
   */
  A_N_MIXED = 6,

  /**
   * @generated from enum value: G_N_MIXED = 7;
   */
  G_N_MIXED = 7,

  /**
   * @generated from enum value: B_G_N_MIXED = 8;
   */
  B_G_N_MIXED = 8,

  /**
   * @generated from enum value: A_AN_AC_MIXED = 9;
   */
  A_AN_AC_MIXED = 9,

  /**
   * @generated from enum value: AN_AC_MIXED = 10;
   */
  AN_AC_MIXED = 10,

  /**
   * @generated from enum value: B_G_N_AX_MIXED = 11;
   */
  B_G_N_AX_MIXED = 11,

  /**
   * @generated from enum value: A_AN_AC_AX_MIXED = 12;
   */
  A_AN_AC_AX_MIXED = 12,
}

/**
 * Describes the enum SpaceX.API.Device.WifiConfig.WirelessMode.
 */
export const WifiConfig_WirelessModeSchema: GenEnum<WifiConfig_WirelessMode> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 4, 2);

/**
 * @generated from enum SpaceX.API.Device.WifiConfig.HTBandwidth
 */
export enum WifiConfig_HTBandwidth {
  /**
   * @generated from enum value: HT_BANDWIDTH_DEFAULT = 0;
   */
  HT_BANDWIDTH_DEFAULT = 0,

  /**
   * @generated from enum value: HT_BANDWIDTH_20_MHZ = 1;
   */
  HT_BANDWIDTH_20_MHZ = 1,

  /**
   * @generated from enum value: HT_BANDWIDTH_20_OR_40_MHZ = 2;
   */
  HT_BANDWIDTH_20_OR_40_MHZ = 2,
}

/**
 * Describes the enum SpaceX.API.Device.WifiConfig.HTBandwidth.
 */
export const WifiConfig_HTBandwidthSchema: GenEnum<WifiConfig_HTBandwidth> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 4, 3);

/**
 * @generated from enum SpaceX.API.Device.WifiConfig.VHTBandwidth
 */
export enum WifiConfig_VHTBandwidth {
  /**
   * @generated from enum value: VHT_BANDWIDTH_DEFAULT = 0;
   */
  VHT_BANDWIDTH_DEFAULT = 0,

  /**
   * @generated from enum value: VHT_BANDWIDTH_DISABLED = 1;
   */
  VHT_BANDWIDTH_DISABLED = 1,

  /**
   * @generated from enum value: VHT_BANDWIDTH_80_MHZ = 2;
   */
  VHT_BANDWIDTH_80_MHZ = 2,

  /**
   * @generated from enum value: VHT_BANDWIDTH_160_MHZ = 3;
   */
  VHT_BANDWIDTH_160_MHZ = 3,

  /**
   * @generated from enum value: VHT_BANDWIDTH_80_PLUS_80_MHZ = 4;
   */
  VHT_BANDWIDTH_80_PLUS_80_MHZ = 4,
}

/**
 * Describes the enum SpaceX.API.Device.WifiConfig.VHTBandwidth.
 */
export const WifiConfig_VHTBandwidthSchema: GenEnum<WifiConfig_VHTBandwidth> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 4, 4);

/**
 * @generated from message SpaceX.API.Device.WanNone
 */
export type WanNone = Message<'SpaceX.API.Device.WanNone'> & {};

/**
 * Describes the message SpaceX.API.Device.WanNone.
 * Use `create(WanNoneSchema)` to create a new message.
 */
export const WanNoneSchema: GenMessage<WanNone> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 5);

/**
 * @generated from message SpaceX.API.Device.WanStarlinkRouterPair
 */
export type WanStarlinkRouterPair = Message<'SpaceX.API.Device.WanStarlinkRouterPair'> & {
  /**
   * @generated from field: bool client_vlan_first = 1;
   */
  clientVlanFirst: boolean;
};

/**
 * Describes the message SpaceX.API.Device.WanStarlinkRouterPair.
 * Use `create(WanStarlinkRouterPairSchema)` to create a new message.
 */
export const WanStarlinkRouterPairSchema: GenMessage<WanStarlinkRouterPair> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 6);

/**
 * @generated from message SpaceX.API.Device.WeeklyBlockSchedule
 */
export type WeeklyBlockSchedule = Message<'SpaceX.API.Device.WeeklyBlockSchedule'> & {
  /**
   * @generated from field: repeated SpaceX.API.Device.WeeklyBlockSchedule.BlockRange block_ranges = 1;
   */
  blockRanges: WeeklyBlockSchedule_BlockRange[];

  /**
   * @generated from field: string group_id = 2;
   */
  groupId: string;
};

/**
 * Describes the message SpaceX.API.Device.WeeklyBlockSchedule.
 * Use `create(WeeklyBlockScheduleSchema)` to create a new message.
 */
export const WeeklyBlockScheduleSchema: GenMessage<WeeklyBlockSchedule> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 7);

/**
 * @generated from message SpaceX.API.Device.WeeklyBlockSchedule.BlockRange
 */
export type WeeklyBlockSchedule_BlockRange =
  Message<'SpaceX.API.Device.WeeklyBlockSchedule.BlockRange'> & {
    /**
     * @generated from field: uint32 start_minutes = 1;
     */
    startMinutes: number;

    /**
     * @generated from field: uint32 end_minutes = 2;
     */
    endMinutes: number;
  };

/**
 * Describes the message SpaceX.API.Device.WeeklyBlockSchedule.BlockRange.
 * Use `create(WeeklyBlockSchedule_BlockRangeSchema)` to create a new message.
 */
export const WeeklyBlockSchedule_BlockRangeSchema: GenMessage<WeeklyBlockSchedule_BlockRange> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 7, 0);

/**
 * @generated from message SpaceX.API.Device.ClientConfig
 */
export type ClientConfig = Message<'SpaceX.API.Device.ClientConfig'> & {
  /**
   * @generated from field: uint32 client_id = 1;
   */
  clientId: number;

  /**
   * @generated from field: string mac_address = 2;
   */
  macAddress: string;

  /**
   * @generated from field: string given_name = 3;
   */
  givenName: string;

  /**
   * @generated from field: repeated SpaceX.API.Device.WeeklyBlockSchedule weekly_block_schedules = 5;
   */
  weeklyBlockSchedules: WeeklyBlockSchedule[];

  /**
   * @generated from field: string group_id = 6;
   */
  groupId: string;
};

/**
 * Describes the message SpaceX.API.Device.ClientConfig.
 * Use `create(ClientConfigSchema)` to create a new message.
 */
export const ClientConfigSchema: GenMessage<ClientConfig> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 8);

/**
 * @generated from message SpaceX.API.Device.ClientName
 */
export type ClientName = Message<'SpaceX.API.Device.ClientName'> & {
  /**
   * @generated from field: string mac_address = 1;
   */
  macAddress: string;

  /**
   * @generated from field: string given_name = 2;
   */
  givenName: string;
};

/**
 * Describes the message SpaceX.API.Device.ClientName.
 * Use `create(ClientNameSchema)` to create a new message.
 */
export const ClientNameSchema: GenMessage<ClientName> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 9);

/**
 * @generated from message SpaceX.API.Device.AuthOpen
 */
export type AuthOpen = Message<'SpaceX.API.Device.AuthOpen'> & {};

/**
 * Describes the message SpaceX.API.Device.AuthOpen.
 * Use `create(AuthOpenSchema)` to create a new message.
 */
export const AuthOpenSchema: GenMessage<AuthOpen> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 10);

/**
 * @generated from message SpaceX.API.Device.AuthWpa2
 */
export type AuthWpa2 = Message<'SpaceX.API.Device.AuthWpa2'> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message SpaceX.API.Device.AuthWpa2.
 * Use `create(AuthWpa2Schema)` to create a new message.
 */
export const AuthWpa2Schema: GenMessage<AuthWpa2> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 11);

/**
 * @generated from message SpaceX.API.Device.AuthWpa3
 */
export type AuthWpa3 = Message<'SpaceX.API.Device.AuthWpa3'> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message SpaceX.API.Device.AuthWpa3.
 * Use `create(AuthWpa3Schema)` to create a new message.
 */
export const AuthWpa3Schema: GenMessage<AuthWpa3> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 12);

/**
 * @generated from message SpaceX.API.Device.AuthWpa2Wpa3
 */
export type AuthWpa2Wpa3 = Message<'SpaceX.API.Device.AuthWpa2Wpa3'> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message SpaceX.API.Device.AuthWpa2Wpa3.
 * Use `create(AuthWpa2Wpa3Schema)` to create a new message.
 */
export const AuthWpa2Wpa3Schema: GenMessage<AuthWpa2Wpa3> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 13);

/**
 * @generated from message SpaceX.API.Device.AuthOpenEncrypted
 */
export type AuthOpenEncrypted = Message<'SpaceX.API.Device.AuthOpenEncrypted'> & {};

/**
 * Describes the message SpaceX.API.Device.AuthOpenEncrypted.
 * Use `create(AuthOpenEncryptedSchema)` to create a new message.
 */
export const AuthOpenEncryptedSchema: GenMessage<AuthOpenEncrypted> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 14);

/**
 * @generated from message SpaceX.API.Device.AuthRadius
 */
export type AuthRadius = Message<'SpaceX.API.Device.AuthRadius'> & {
  /**
   * @generated from field: string server = 1;
   */
  server: string;

  /**
   * @generated from field: string server_ca = 3 [deprecated = true];
   * @deprecated
   */
  serverCa: string;

  /**
   * @generated from field: string server_ca_base_64 = 4;
   */
  serverCaBase64: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: SpaceX.API.Device.Protocol transport = 5;
   */
  transport: Protocol;
};

/**
 * Describes the message SpaceX.API.Device.AuthRadius.
 * Use `create(AuthRadiusSchema)` to create a new message.
 */
export const AuthRadiusSchema: GenMessage<AuthRadius> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 15);

/**
 * @generated from message SpaceX.API.Device.AuthOnboardRadius
 */
export type AuthOnboardRadius = Message<'SpaceX.API.Device.AuthOnboardRadius'> & {};

/**
 * Describes the message SpaceX.API.Device.AuthOnboardRadius.
 * Use `create(AuthOnboardRadiusSchema)` to create a new message.
 */
export const AuthOnboardRadiusSchema: GenMessage<AuthOnboardRadius> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 16);

/**
 * @generated from message SpaceX.API.Device.NoTrafficControl
 */
export type NoTrafficControl = Message<'SpaceX.API.Device.NoTrafficControl'> & {};

/**
 * Describes the message SpaceX.API.Device.NoTrafficControl.
 * Use `create(NoTrafficControlSchema)` to create a new message.
 */
export const NoTrafficControlSchema: GenMessage<NoTrafficControl> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 17);

/**
 * @generated from message SpaceX.API.Device.AckSuppression
 */
export type AckSuppression = Message<'SpaceX.API.Device.AckSuppression'> & {
  /**
   * @generated from field: uint32 ack_mark = 1 [deprecated = true];
   * @deprecated
   */
  ackMark: number;

  /**
   * @generated from field: float htb_ack_queue_rate = 2;
   */
  htbAckQueueRate: number;

  /**
   * @generated from field: float htb_ack_queue_ceil = 3;
   */
  htbAckQueueCeil: number;

  /**
   * @generated from field: float cake_queue_bandwidth = 4;
   */
  cakeQueueBandwidth: number;

  /**
   * @generated from field: bool cake_ack_filter_aggressive = 5;
   */
  cakeAckFilterAggressive: boolean;

  /**
   * @generated from field: float cake_manual_rtt = 6;
   */
  cakeManualRtt: number;
};

/**
 * Describes the message SpaceX.API.Device.AckSuppression.
 * Use `create(AckSuppressionSchema)` to create a new message.
 */
export const AckSuppressionSchema: GenMessage<AckSuppression> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 18);

/**
 * @generated from message SpaceX.API.Device.CakeRateLimit
 */
export type CakeRateLimit = Message<'SpaceX.API.Device.CakeRateLimit'> & {
  /**
   * @generated from field: uint32 host_mark = 1 [deprecated = true];
   * @deprecated
   */
  hostMark: number;

  /**
   * @generated from field: float bandwidth = 2;
   */
  bandwidth: number;

  /**
   * @generated from field: SpaceX.API.Device.CakePriorityQueueParameter priority_queue_parameter = 3;
   */
  priorityQueueParameter: CakePriorityQueueParameter;

  /**
   * @generated from field: SpaceX.API.Device.CakeAckFilter ack_filter = 4;
   */
  ackFilter: CakeAckFilter;

  /**
   * @generated from field: float manual_rtt = 6;
   */
  manualRtt: number;
};

/**
 * Describes the message SpaceX.API.Device.CakeRateLimit.
 * Use `create(CakeRateLimitSchema)` to create a new message.
 */
export const CakeRateLimitSchema: GenMessage<CakeRateLimit> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_wifi_config, 19);

/**
 * @generated from enum SpaceX.API.Device.MeshAuth
 */
export enum MeshAuth {
  /**
   * @generated from enum value: MESH_AUTH_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: MESH_AUTH_NEW = 1;
   */
  NEW = 1,

  /**
   * @generated from enum value: MESH_AUTH_TRUSTED = 2;
   */
  TRUSTED = 2,

  /**
   * @generated from enum value: MESH_AUTH_UNTRUSTED = 3;
   */
  UNTRUSTED = 3,
}

/**
 * Describes the enum SpaceX.API.Device.MeshAuth.
 */
export const MeshAuthSchema: GenEnum<MeshAuth> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 0);

/**
 * @generated from enum SpaceX.API.Device.CakeAckFilter
 */
export enum CakeAckFilter {
  /**
   * @generated from enum value: NO_ACK_FILTER = 0;
   */
  NO_ACK_FILTER = 0,

  /**
   * @generated from enum value: ACK_FILTER = 1;
   */
  ACK_FILTER = 1,

  /**
   * @generated from enum value: ACK_FILTER_AGGRESSIVE = 2;
   */
  ACK_FILTER_AGGRESSIVE = 2,
}

/**
 * Describes the enum SpaceX.API.Device.CakeAckFilter.
 */
export const CakeAckFilterSchema: GenEnum<CakeAckFilter> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 1);

/**
 * @generated from enum SpaceX.API.Device.CakePriorityQueueParameter
 */
export enum CakePriorityQueueParameter {
  /**
   * @generated from enum value: DIFFSERV3 = 0;
   */
  DIFFSERV3 = 0,

  /**
   * @generated from enum value: DIFFSERV4 = 1;
   */
  DIFFSERV4 = 1,

  /**
   * @generated from enum value: PRECEDENCE = 2;
   */
  PRECEDENCE = 2,

  /**
   * @generated from enum value: BEST_EFFORT = 3;
   */
  BEST_EFFORT = 3,
}

/**
 * Describes the enum SpaceX.API.Device.CakePriorityQueueParameter.
 */
export const CakePriorityQueueParameterSchema: GenEnum<CakePriorityQueueParameter> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_wifi_config, 2);
