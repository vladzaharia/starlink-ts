// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file spacex_api/device/common.proto (package SpaceX.API.Device, syntax proto3)

import type { GenEnum, GenFile, GenMessage } from '@bufbuild/protobuf/codegenv1';
import { enumDesc, fileDesc, messageDesc } from '@bufbuild/protobuf/codegenv1';
import type { Message } from '@bufbuild/protobuf';

/**
 * Describes the file spacex_api/device/common.proto.
 */
export const file_spacex_api_device_common: GenFile =
  /*@__PURE__*/
  fileDesc(
    'Ch5zcGFjZXhfYXBpL2RldmljZS9jb21tb24ucHJvdG8SEVNwYWNlWC5BUEkuRGV2aWNlIo8DCgpEZXZpY2VJbmZvEgoKAmlkGAEgASgJEhgKEGhhcmR3YXJlX3ZlcnNpb24YAiABKAkSEQoJYm9hcmRfcmV2GA4gASgFEhgKEHNvZnR3YXJlX3ZlcnNpb24YAyABKAkSHAoUbWFudWZhY3R1cmVkX3ZlcnNpb24YCyABKAkSGQoRZ2VuZXJhdGlvbl9udW1iZXIYDCABKAMSFAoMY291bnRyeV9jb2RlGAQgASgJEhQKDHV0Y19vZmZzZXRfcxgFIAEoBRIhChlzb2Z0d2FyZV9wYXJ0aXRpb25zX2VxdWFsGAYgASgIEg4KBmlzX2RldhgHIAEoCBIRCglib290Y291bnQYCCABKAUSHQoVYW50aV9yb2xsYmFja192ZXJzaW9uGAkgASgFEg8KB2lzX2hpdGwYCiABKAgSKgoEYm9vdBjpByABKAsyGy5TcGFjZVguQVBJLkRldmljZS5Cb290SW5mbxIVCg1kaXNoX2NvaG91c2VkGA0gASgIEhAKCGJ1aWxkX2lkGA8gASgJIh8KC0RldmljZVN0YXRlEhAKCHVwdGltZV9zGAEgASgEIi0KClNpZ25lZERhdGESDAoEZGF0YRgBIAEoDBIRCglzaWduYXR1cmUYAiABKAwiEgoQR2V0TmV4dElkUmVxdWVzdCIxChFHZXROZXh0SWRSZXNwb25zZRIKCgJpZBgBIAEoBBIQCghlcG9jaF9pZBgCIAEoBCKSBAoIQm9vdEluZm8SRwoPY291bnRfYnlfcmVhc29uGAEgAygLMi4uU3BhY2VYLkFQSS5EZXZpY2UuQm9vdEluZm8uQ291bnRCeVJlYXNvbkVudHJ5ElIKFWNvdW50X2J5X3JlYXNvbl9kZWx0YRgEIAMoCzIzLlNwYWNlWC5BUEkuRGV2aWNlLkJvb3RJbmZvLkNvdW50QnlSZWFzb25EZWx0YUVudHJ5EjIKC2xhc3RfcmVhc29uGAIgASgOMh0uU3BhY2VYLkFQSS5EZXZpY2UuQm9vdFJlYXNvbhISCgpsYXN0X2NvdW50GAMgASgFEhIKCmNyYXNoX2Jvb3QYBSABKAgSGAoQY3Jhc2hfYm9vdF9jb3VudBgGIAEoBRIiChpldmVuX3NpZGVfc29mdHdhcmVfdmVyc2lvbhgHIAEoCRIhChlvZGRfc2lkZV9zb2Z0d2FyZV92ZXJzaW9uGAggASgJEhwKFGFwaV92ZXJzaW9uX29kZF9zaWRlGAkgASgFEh0KFWFwaV92ZXJzaW9uX2V2ZW5fc2lkZRgKIAEoBRo0ChJDb3VudEJ5UmVhc29uRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ARo5ChdDb3VudEJ5UmVhc29uRGVsdGFFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIkAKClBpbmdUYXJnZXQSDwoHc2VydmljZRgBIAEoCRIQCghsb2NhdGlvbhgCIAEoCRIPCgdhZGRyZXNzGAMgASgJImAKClBpbmdSZXN1bHQSLQoGdGFyZ2V0GAMgASgLMh0uU3BhY2VYLkFQSS5EZXZpY2UuUGluZ1RhcmdldBIQCghkcm9wUmF0ZRgBIAEoAhIRCglsYXRlbmN5TXMYAiABKAIiQwoQQm9uZGluZ0NoYWxsZW5nZRIPCgdkaXNoX2lkGAEgASgJEg8KB3dpZmlfaWQYAiABKAkSDQoFbm9uY2UYAyABKAwiRwoTQXV0aGVudGljYXRlUmVxdWVzdBIwCgljaGFsbGVuZ2UYASABKAsyHS5TcGFjZVguQVBJLkRldmljZS5TaWduZWREYXRhIkEKEUNoYWxsZW5nZVJlc3BvbnNlEhEKCXNpZ25hdHVyZRgBIAEoDBIZChFjZXJ0aWZpY2F0ZV9jaGFpbhgCIAEoDCKiBAoQTmV0d29ya0ludGVyZmFjZRIMCgRuYW1lGAEgASgJEgoKAnVwGAQgASgIEhMKC21hY19hZGRyZXNzGAUgASgJEhYKDmlwdjRfYWRkcmVzc2VzGAYgAygJEhYKDmlwdjZfYWRkcmVzc2VzGAcgAygJEj0KCHJ4X3N0YXRzGAIgASgLMisuU3BhY2VYLkFQSS5EZXZpY2UuTmV0d29ya0ludGVyZmFjZS5SeFN0YXRzEj0KCHR4X3N0YXRzGAMgASgLMisuU3BhY2VYLkFQSS5EZXZpY2UuTmV0d29ya0ludGVyZmFjZS5UeFN0YXRzEkAKCGV0aGVybmV0GOgHIAEoCzIrLlNwYWNlWC5BUEkuRGV2aWNlLkV0aGVybmV0TmV0d29ya0ludGVyZmFjZUgAEjgKBHdpZmkY6QcgASgLMicuU3BhY2VYLkFQSS5EZXZpY2UuV2lmaU5ldHdvcmtJbnRlcmZhY2VIABI8CgZicmlkZ2UY6gcgASgLMikuU3BhY2VYLkFQSS5EZXZpY2UuQnJpZGdlTmV0d29ya0ludGVyZmFjZUgAGj8KB1J4U3RhdHMSDQoFYnl0ZXMYASABKAQSDwoHcGFja2V0cxgCIAEoBBIUCgxmcmFtZV9lcnJvcnMYAyABKAQaKQoHVHhTdGF0cxINCgVieXRlcxgBIAEoBBIPCgdwYWNrZXRzGAIgASgEQgsKCWludGVyZmFjZSLQAQoYRXRoZXJuZXROZXR3b3JrSW50ZXJmYWNlEhUKDWxpbmtfZGV0ZWN0ZWQYASABKAgSEgoKc3BlZWRfbWJwcxgCIAEoDRIaChJhdXRvbmVnb3RpYXRpb25fb24YAyABKAgSQgoGZHVwbGV4GAQgASgOMjIuU3BhY2VYLkFQSS5EZXZpY2UuRXRoZXJuZXROZXR3b3JrSW50ZXJmYWNlLkR1cGxleCIpCgZEdXBsZXgSCwoHVU5LTk9XThAAEggKBEhBTEYQARIICgRGVUxMEAIipwMKFFdpZmlOZXR3b3JrSW50ZXJmYWNlEloKFWludmFsaWRfcGFja2V0X2NvdW50cxgCIAEoCzI7LlNwYWNlWC5BUEkuRGV2aWNlLldpZmlOZXR3b3JrSW50ZXJmYWNlLkludmFsaWRQYWNrZXRDb3VudHMSDwoHY2hhbm5lbBgDIAEoDRIWCg5taXNzZWRfYmVhY29ucxgIIAEoDRIUCgxsaW5rX3F1YWxpdHkYBCABKAESFAoMc2lnbmFsX2xldmVsGAUgASgBEhMKC25vaXNlX2xldmVsGAYgASgBGpUBChNJbnZhbGlkUGFja2V0Q291bnRzEhcKD3J4X2ludmFsaWRfbndpZBgBIAEoDRIYChByeF9pbnZhbGlkX2NyeXB0GAIgASgNEhcKD3J4X2ludmFsaWRfZnJhZxgDIAEoDRIcChR0eF9leGNlc3NpdmVfcmV0cmllcxgEIAEoDRIUCgxpbnZhbGlkX21pc2MYBSABKA1KBAgBEAJKBAgHEAhKBAgJEApSDnRoZXJtYWxfc3RhdHVzUg9hbnRlbm5hZV9zdGF0dXMiLgoWQnJpZGdlTmV0d29ya0ludGVyZmFjZRIUCgxtZW1iZXJfbmFtZXMYASADKAkiNAoLTExBUG9zaXRpb24SCwoDbGF0GAEgASgBEgsKA2xvbhgCIAEoARILCgNhbHQYAyABKAEiLwoMRUNFRlBvc2l0aW9uEgkKAXgYASABKAESCQoBeRgCIAEoARIJCgF6GAMgASgBIkUKClF1YXRlcm5pb24SEAoIcV9zY2FsYXIYASABKAISCwoDcV94GAIgASgCEgsKA3FfeRgDIAEoAhILCgNxX3oYBCABKAIiGgoYSW5pdGlhdGVSZW1vdGVTc2hSZXF1ZXN0IkoKGUluaXRpYXRlUmVtb3RlU3NoUmVzcG9uc2USDAoEcG9ydBgBIAEoDRIPCgdhZGRyZXNzGAIgASgJEg4KBnN0c2FmZRgDIAEoDCJVChVTb2Z0d2FyZVVwZGF0ZVJlcXVlc3QSEQoJc3RyZWFtX2lkGAEgASgEEgwKBGRhdGEYAiABKAwSDAoEb3BlbhgDIAEoCBINCgVjbG9zZRgEIAEoCCIYChZTb2Z0d2FyZVVwZGF0ZVJlc3BvbnNlInAKCEV2ZW50TG9nEioKBmV2ZW50cxgBIAMoCzIaLlNwYWNlWC5BUEkuRGV2aWNlLlVYRXZlbnQSGgoSc3RhcnRfdGltZXN0YW1wX25zGAIgASgDEhwKFGN1cnJlbnRfdGltZXN0YW1wX25zGAMgASgDIp4BCgdVWEV2ZW50EjIKCHNldmVyaXR5GAEgASgOMiAuU3BhY2VYLkFQSS5EZXZpY2UuRXZlbnRTZXZlcml0eRIuCgZyZWFzb24YAiABKA4yHi5TcGFjZVguQVBJLkRldmljZS5FdmVudFJlYXNvbhIaChJzdGFydF90aW1lc3RhbXBfbnMYAyABKAMSEwoLZHVyYXRpb25fbnMYBCABKAQqigMKCkJvb3RSZWFzb24SFwoTQk9PVF9SRUFTT05fVU5LTk9XThAAEg0KCUZPUkdPVFRFThABEg8KC1BPV0VSX0NZQ0xFEAISCwoHQ09NTUFORBADEhMKD1NPRlRXQVJFX1VQREFURRAEEhEKDUNPTkZJR19VUERBVEUQBRIPCgtVUFRJTUVfRkRJUhAGEhEKDVJFUEVBVEVSX0ZESVIQBxIZChVBVklBVElPTl9FVEhfV0FOX0ZESVIQCBIQCgxLRVJORUxfUEFOSUMQCRIcChhJTlRFTlRJT05BTF9LRVJORUxfUEFOSUMQDhIbChdNQ1VfQlJJTkdVUF9GQUlMRURfRkRJUhALEhgKFEFWSUFUSU9OX09VVEFHRV9GRElSEAwSFQoRU09GVFdBUkVfV0FUQ0hET0cQDRIVChFIQVJEV0FSRV9XQVRDSERPRxAPEhsKF1JFUEVBVEVSX1VOVFJVU1RFRF9GRElSEBAiBAgKEAoqF0FWSUFUSU9OXzVNX09VVEFHRV9GRElSKoABCg1FdmVudFNldmVyaXR5EhoKFkVWRU5UX1NFVkVSSVRZX1VOS05PV04QABIaChZFVkVOVF9TRVZFUklUWV9XQVJOSU5HEAESGgoWRVZFTlRfU0VWRVJJVFlfQ0FVVElPThACEhsKF0VWRU5UX1NFVkVSSVRZX0FEVklTT1JZEAMqqw0KC0V2ZW50UmVhc29uEhgKFEVWRU5UX1JFQVNPTl9VTktOT1dOEAASHwobRVZFTlRfUkVBU09OX09VVEFHRV9VTktOT1dOEAESHwobRVZFTlRfUkVBU09OX09VVEFHRV9CT09USU5HEAISHgoaRVZFTlRfUkVBU09OX09VVEFHRV9TVE9XRUQQAxIoCiRFVkVOVF9SRUFTT05fT1VUQUdFX1RIRVJNQUxfU0hVVERPV04QBBIjCh9FVkVOVF9SRUFTT05fT1VUQUdFX05PX1NDSEVEVUxFEAUSHwobRVZFTlRfUkVBU09OX09VVEFHRV9OT19TQVRTEAYSIgoeRVZFTlRfUkVBU09OX09VVEFHRV9PQlNUUlVDVEVEEAcSIwofRVZFTlRfUkVBU09OX09VVEFHRV9OT19ET1dOTElOSxAIEiAKHEVWRU5UX1JFQVNPTl9PVVRBR0VfTk9fUElOR1MQCRIgChxFVkVOVF9SRUFTT05fT1VUQUdFX1NMRUVQSU5HEAoSMAosRVZFTlRfUkVBU09OX09VVEFHRV9NT1ZJTkdfV0hJTEVfTk9UX0FMTE9XRUQQCxIiCh5FVkVOVF9SRUFTT05fT1VUQUdFX1NLWV9TRUFSQ0gQExIzCi9FVkVOVF9SRUFTT05fVVRfQUxFUlRfUkFJTl9TTlJfUEVSU0lTVEVOVExZX0xPVxAWEiUKIUVWRU5UX1JFQVNPTl9VVF9BTEVSVF9FVEhfTk9fTElOSxAXEicKI0VWRU5UX1JFQVNPTl9VVF9BTEVSVF9FVEhfU0xPV19MSU5LEBgSKwonRVZFTlRfUkVBU09OX1VUX0FMRVJUX0VUSF9TTE9XX0xJTktfMTAwEBkSKgomRVZFTlRfUkVBU09OX0hJR0hfRE9XTkxJTktfUEFDS0VUX0xPU1MQDBIlCiFFVkVOVF9SRUFTT05fUk9VVEVSX0ZBQ1RPUllfUkVTRVQQDRIeChpFVkVOVF9SRUFTT05fUk9VVEVSX1JFQk9PVBAOEiMKH0VWRU5UX1JFQVNPTl9ST1VURVJfUE9XRVJfQ1lDTEUQDxIlCiFFVkVOVF9SRUFTT05fUk9VVEVSX0NPTkZJR19VUERBVEUQEBInCiNFVkVOVF9SRUFTT05fUk9VVEVSX1NPRlRXQVJFX1VQREFURRAREikKJUVWRU5UX1JFQVNPTl9ST1VURVJfVEhFUk1BTF9USFJPVFRMRUQQEhIsCihFVkVOVF9SRUFTT05fUk9VVEVSX1JFQk9PVF9DT05GSUdfVVBEQVRFEBQSKgomRVZFTlRfUkVBU09OX1JPVVRFUl9QVUJMSUNfSVBWNF9DSEFOR0UQFRIqCiZFVkVOVF9SRUFTT05fUk9VVEVSX1BPUF9JUFY0X1BJTkdfRFJPUBAaEioKJkVWRU5UX1JFQVNPTl9ST1VURVJfUE9QX0lQVjZfUElOR19EUk9QEBsSMAosRVZFTlRfUkVBU09OX1JPVVRFUl9MQU5fRVRIX0hJR0hfUEFDS0VUX0xPU1MQHBIwCixFVkVOVF9SRUFTT05fUk9VVEVSX1dBTl9FVEhfSElHSF9QQUNLRVRfTE9TUxAdEjEKLUVWRU5UX1JFQVNPTl9ST1VURVJfREhDUF9TRVJWRVJfRkFJTF9UT19TVEFSVBAeEi0KKUVWRU5UX1JFQVNPTl9ST1VURVJfREhDUF9TRVJWRVJfRVhIQVVTVEVEEB8SNQoxRVZFTlRfUkVBU09OX1JPVVRFUl9ETlNfSVBWNF9TRVJWRVJfRkFJTF9UT19TVEFSVBAgEjUKMUVWRU5UX1JFQVNPTl9ST1VURVJfRE5TX0lQVjZfU0VSVkVSX0ZBSUxfVE9fU1RBUlQQIRIxCi1FVkVOVF9SRUFTT05fUk9VVEVSX1NFVF9DVVNUT01fRE5TX0RJU0FMTE9XRUQQIhIuCipFVkVOVF9SRUFTT05fUk9VVEVSX1NFVF9DVVNUT01fRE5TX0FMTE9XRUQQIxIsCihFVkVOVF9SRUFTT05fUk9VVEVSX01BWF9XSVJFTEVTU19DTElFTlRTECQSMwovRVZFTlRfUkVBU09OX1JPVVRFUl9NQVhfNUdISUdIX1dJUkVMRVNTX0NMSUVOVFMQJRI0CjBFVkVOVF9SRUFTT05fUk9VVEVSX01FU0hfVE9QT0xPR1lfQ0hBTkdJTkdfT0ZURU4QJhImCiJFVkVOVF9SRUFTT05fUk9VVEVSX0NPTk5UUkFDS19GVUxMECdCF1oVc3BhY2V4LmNvbS9hcGkvZGV2aWNlYgZwcm90bzM'
  );

/**
 * @generated from message SpaceX.API.Device.DeviceInfo
 */
export type DeviceInfo = Message<'SpaceX.API.Device.DeviceInfo'> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string hardware_version = 2;
   */
  hardwareVersion: string;

  /**
   * @generated from field: int32 board_rev = 14;
   */
  boardRev: number;

  /**
   * @generated from field: string software_version = 3;
   */
  softwareVersion: string;

  /**
   * @generated from field: string manufactured_version = 11;
   */
  manufacturedVersion: string;

  /**
   * @generated from field: int64 generation_number = 12;
   */
  generationNumber: bigint;

  /**
   * @generated from field: string country_code = 4;
   */
  countryCode: string;

  /**
   * @generated from field: int32 utc_offset_s = 5;
   */
  utcOffsetS: number;

  /**
   * @generated from field: bool software_partitions_equal = 6;
   */
  softwarePartitionsEqual: boolean;

  /**
   * @generated from field: bool is_dev = 7;
   */
  isDev: boolean;

  /**
   * @generated from field: int32 bootcount = 8;
   */
  bootcount: number;

  /**
   * @generated from field: int32 anti_rollback_version = 9;
   */
  antiRollbackVersion: number;

  /**
   * @generated from field: bool is_hitl = 10;
   */
  isHitl: boolean;

  /**
   * @generated from field: SpaceX.API.Device.BootInfo boot = 1001;
   */
  boot?: BootInfo;

  /**
   * @generated from field: bool dish_cohoused = 13;
   */
  dishCohoused: boolean;

  /**
   * @generated from field: string build_id = 15;
   */
  buildId: string;
};

/**
 * Describes the message SpaceX.API.Device.DeviceInfo.
 * Use `create(DeviceInfoSchema)` to create a new message.
 */
export const DeviceInfoSchema: GenMessage<DeviceInfo> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 0);

/**
 * @generated from message SpaceX.API.Device.DeviceState
 */
export type DeviceState = Message<'SpaceX.API.Device.DeviceState'> & {
  /**
   * @generated from field: uint64 uptime_s = 1;
   */
  uptimeS: bigint;
};

/**
 * Describes the message SpaceX.API.Device.DeviceState.
 * Use `create(DeviceStateSchema)` to create a new message.
 */
export const DeviceStateSchema: GenMessage<DeviceState> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 1);

/**
 * @generated from message SpaceX.API.Device.SignedData
 */
export type SignedData = Message<'SpaceX.API.Device.SignedData'> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: bytes signature = 2;
   */
  signature: Uint8Array;
};

/**
 * Describes the message SpaceX.API.Device.SignedData.
 * Use `create(SignedDataSchema)` to create a new message.
 */
export const SignedDataSchema: GenMessage<SignedData> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 2);

/**
 * @generated from message SpaceX.API.Device.GetNextIdRequest
 */
export type GetNextIdRequest = Message<'SpaceX.API.Device.GetNextIdRequest'> & {};

/**
 * Describes the message SpaceX.API.Device.GetNextIdRequest.
 * Use `create(GetNextIdRequestSchema)` to create a new message.
 */
export const GetNextIdRequestSchema: GenMessage<GetNextIdRequest> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 3);

/**
 * @generated from message SpaceX.API.Device.GetNextIdResponse
 */
export type GetNextIdResponse = Message<'SpaceX.API.Device.GetNextIdResponse'> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: uint64 epoch_id = 2;
   */
  epochId: bigint;
};

/**
 * Describes the message SpaceX.API.Device.GetNextIdResponse.
 * Use `create(GetNextIdResponseSchema)` to create a new message.
 */
export const GetNextIdResponseSchema: GenMessage<GetNextIdResponse> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 4);

/**
 * @generated from message SpaceX.API.Device.BootInfo
 */
export type BootInfo = Message<'SpaceX.API.Device.BootInfo'> & {
  /**
   * @generated from field: map<int32, int32> count_by_reason = 1;
   */
  countByReason: { [key: number]: number };

  /**
   * @generated from field: map<int32, int32> count_by_reason_delta = 4;
   */
  countByReasonDelta: { [key: number]: number };

  /**
   * @generated from field: SpaceX.API.Device.BootReason last_reason = 2;
   */
  lastReason: BootReason;

  /**
   * @generated from field: int32 last_count = 3;
   */
  lastCount: number;

  /**
   * @generated from field: bool crash_boot = 5;
   */
  crashBoot: boolean;

  /**
   * @generated from field: int32 crash_boot_count = 6;
   */
  crashBootCount: number;

  /**
   * @generated from field: string even_side_software_version = 7;
   */
  evenSideSoftwareVersion: string;

  /**
   * @generated from field: string odd_side_software_version = 8;
   */
  oddSideSoftwareVersion: string;

  /**
   * @generated from field: int32 api_version_odd_side = 9;
   */
  apiVersionOddSide: number;

  /**
   * @generated from field: int32 api_version_even_side = 10;
   */
  apiVersionEvenSide: number;
};

/**
 * Describes the message SpaceX.API.Device.BootInfo.
 * Use `create(BootInfoSchema)` to create a new message.
 */
export const BootInfoSchema: GenMessage<BootInfo> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 5);

/**
 * @generated from message SpaceX.API.Device.PingTarget
 */
export type PingTarget = Message<'SpaceX.API.Device.PingTarget'> & {
  /**
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * @generated from field: string address = 3;
   */
  address: string;
};

/**
 * Describes the message SpaceX.API.Device.PingTarget.
 * Use `create(PingTargetSchema)` to create a new message.
 */
export const PingTargetSchema: GenMessage<PingTarget> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 6);

/**
 * @generated from message SpaceX.API.Device.PingResult
 */
export type PingResult = Message<'SpaceX.API.Device.PingResult'> & {
  /**
   * @generated from field: SpaceX.API.Device.PingTarget target = 3;
   */
  target?: PingTarget;

  /**
   * @generated from field: float dropRate = 1;
   */
  dropRate: number;

  /**
   * @generated from field: float latencyMs = 2;
   */
  latencyMs: number;
};

/**
 * Describes the message SpaceX.API.Device.PingResult.
 * Use `create(PingResultSchema)` to create a new message.
 */
export const PingResultSchema: GenMessage<PingResult> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 7);

/**
 * @generated from message SpaceX.API.Device.BondingChallenge
 */
export type BondingChallenge = Message<'SpaceX.API.Device.BondingChallenge'> & {
  /**
   * @generated from field: string dish_id = 1;
   */
  dishId: string;

  /**
   * @generated from field: string wifi_id = 2;
   */
  wifiId: string;

  /**
   * @generated from field: bytes nonce = 3;
   */
  nonce: Uint8Array;
};

/**
 * Describes the message SpaceX.API.Device.BondingChallenge.
 * Use `create(BondingChallengeSchema)` to create a new message.
 */
export const BondingChallengeSchema: GenMessage<BondingChallenge> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 8);

/**
 * @generated from message SpaceX.API.Device.AuthenticateRequest
 */
export type AuthenticateRequest = Message<'SpaceX.API.Device.AuthenticateRequest'> & {
  /**
   * @generated from field: SpaceX.API.Device.SignedData challenge = 1;
   */
  challenge?: SignedData;
};

/**
 * Describes the message SpaceX.API.Device.AuthenticateRequest.
 * Use `create(AuthenticateRequestSchema)` to create a new message.
 */
export const AuthenticateRequestSchema: GenMessage<AuthenticateRequest> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 9);

/**
 * @generated from message SpaceX.API.Device.ChallengeResponse
 */
export type ChallengeResponse = Message<'SpaceX.API.Device.ChallengeResponse'> & {
  /**
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;

  /**
   * @generated from field: bytes certificate_chain = 2;
   */
  certificateChain: Uint8Array;
};

/**
 * Describes the message SpaceX.API.Device.ChallengeResponse.
 * Use `create(ChallengeResponseSchema)` to create a new message.
 */
export const ChallengeResponseSchema: GenMessage<ChallengeResponse> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 10);

/**
 * @generated from message SpaceX.API.Device.NetworkInterface
 */
export type NetworkInterface = Message<'SpaceX.API.Device.NetworkInterface'> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool up = 4;
   */
  up: boolean;

  /**
   * @generated from field: string mac_address = 5;
   */
  macAddress: string;

  /**
   * @generated from field: repeated string ipv4_addresses = 6;
   */
  ipv4Addresses: string[];

  /**
   * @generated from field: repeated string ipv6_addresses = 7;
   */
  ipv6Addresses: string[];

  /**
   * @generated from field: SpaceX.API.Device.NetworkInterface.RxStats rx_stats = 2;
   */
  rxStats?: NetworkInterface_RxStats;

  /**
   * @generated from field: SpaceX.API.Device.NetworkInterface.TxStats tx_stats = 3;
   */
  txStats?: NetworkInterface_TxStats;

  /**
   * @generated from oneof SpaceX.API.Device.NetworkInterface.interface
   */
  interface:
    | {
        /**
         * @generated from field: SpaceX.API.Device.EthernetNetworkInterface ethernet = 1000;
         */
        value: EthernetNetworkInterface;
        case: 'ethernet';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.WifiNetworkInterface wifi = 1001;
         */
        value: WifiNetworkInterface;
        case: 'wifi';
      }
    | {
        /**
         * @generated from field: SpaceX.API.Device.BridgeNetworkInterface bridge = 1002;
         */
        value: BridgeNetworkInterface;
        case: 'bridge';
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message SpaceX.API.Device.NetworkInterface.
 * Use `create(NetworkInterfaceSchema)` to create a new message.
 */
export const NetworkInterfaceSchema: GenMessage<NetworkInterface> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 11);

/**
 * @generated from message SpaceX.API.Device.NetworkInterface.RxStats
 */
export type NetworkInterface_RxStats = Message<'SpaceX.API.Device.NetworkInterface.RxStats'> & {
  /**
   * @generated from field: uint64 bytes = 1;
   */
  bytes: bigint;

  /**
   * @generated from field: uint64 packets = 2;
   */
  packets: bigint;

  /**
   * @generated from field: uint64 frame_errors = 3;
   */
  frameErrors: bigint;
};

/**
 * Describes the message SpaceX.API.Device.NetworkInterface.RxStats.
 * Use `create(NetworkInterface_RxStatsSchema)` to create a new message.
 */
export const NetworkInterface_RxStatsSchema: GenMessage<NetworkInterface_RxStats> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 11, 0);

/**
 * @generated from message SpaceX.API.Device.NetworkInterface.TxStats
 */
export type NetworkInterface_TxStats = Message<'SpaceX.API.Device.NetworkInterface.TxStats'> & {
  /**
   * @generated from field: uint64 bytes = 1;
   */
  bytes: bigint;

  /**
   * @generated from field: uint64 packets = 2;
   */
  packets: bigint;
};

/**
 * Describes the message SpaceX.API.Device.NetworkInterface.TxStats.
 * Use `create(NetworkInterface_TxStatsSchema)` to create a new message.
 */
export const NetworkInterface_TxStatsSchema: GenMessage<NetworkInterface_TxStats> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 11, 1);

/**
 * @generated from message SpaceX.API.Device.EthernetNetworkInterface
 */
export type EthernetNetworkInterface = Message<'SpaceX.API.Device.EthernetNetworkInterface'> & {
  /**
   * @generated from field: bool link_detected = 1;
   */
  linkDetected: boolean;

  /**
   * @generated from field: uint32 speed_mbps = 2;
   */
  speedMbps: number;

  /**
   * @generated from field: bool autonegotiation_on = 3;
   */
  autonegotiationOn: boolean;

  /**
   * @generated from field: SpaceX.API.Device.EthernetNetworkInterface.Duplex duplex = 4;
   */
  duplex: EthernetNetworkInterface_Duplex;
};

/**
 * Describes the message SpaceX.API.Device.EthernetNetworkInterface.
 * Use `create(EthernetNetworkInterfaceSchema)` to create a new message.
 */
export const EthernetNetworkInterfaceSchema: GenMessage<EthernetNetworkInterface> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 12);

/**
 * @generated from enum SpaceX.API.Device.EthernetNetworkInterface.Duplex
 */
export enum EthernetNetworkInterface_Duplex {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HALF = 1;
   */
  HALF = 1,

  /**
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum SpaceX.API.Device.EthernetNetworkInterface.Duplex.
 */
export const EthernetNetworkInterface_DuplexSchema: GenEnum<EthernetNetworkInterface_Duplex> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_common, 12, 0);

/**
 * @generated from message SpaceX.API.Device.WifiNetworkInterface
 */
export type WifiNetworkInterface = Message<'SpaceX.API.Device.WifiNetworkInterface'> & {
  /**
   * @generated from field: SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts invalid_packet_counts = 2;
   */
  invalidPacketCounts?: WifiNetworkInterface_InvalidPacketCounts;

  /**
   * @generated from field: uint32 channel = 3;
   */
  channel: number;

  /**
   * @generated from field: uint32 missed_beacons = 8;
   */
  missedBeacons: number;

  /**
   * @generated from field: double link_quality = 4;
   */
  linkQuality: number;

  /**
   * @generated from field: double signal_level = 5;
   */
  signalLevel: number;

  /**
   * @generated from field: double noise_level = 6;
   */
  noiseLevel: number;
};

/**
 * Describes the message SpaceX.API.Device.WifiNetworkInterface.
 * Use `create(WifiNetworkInterfaceSchema)` to create a new message.
 */
export const WifiNetworkInterfaceSchema: GenMessage<WifiNetworkInterface> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 13);

/**
 * @generated from message SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts
 */
export type WifiNetworkInterface_InvalidPacketCounts =
  Message<'SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts'> & {
    /**
     * @generated from field: uint32 rx_invalid_nwid = 1;
     */
    rxInvalidNwid: number;

    /**
     * @generated from field: uint32 rx_invalid_crypt = 2;
     */
    rxInvalidCrypt: number;

    /**
     * @generated from field: uint32 rx_invalid_frag = 3;
     */
    rxInvalidFrag: number;

    /**
     * @generated from field: uint32 tx_excessive_retries = 4;
     */
    txExcessiveRetries: number;

    /**
     * @generated from field: uint32 invalid_misc = 5;
     */
    invalidMisc: number;
  };

/**
 * Describes the message SpaceX.API.Device.WifiNetworkInterface.InvalidPacketCounts.
 * Use `create(WifiNetworkInterface_InvalidPacketCountsSchema)` to create a new message.
 */
export const WifiNetworkInterface_InvalidPacketCountsSchema: GenMessage<WifiNetworkInterface_InvalidPacketCounts> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 13, 0);

/**
 * @generated from message SpaceX.API.Device.BridgeNetworkInterface
 */
export type BridgeNetworkInterface = Message<'SpaceX.API.Device.BridgeNetworkInterface'> & {
  /**
   * @generated from field: repeated string member_names = 1;
   */
  memberNames: string[];
};

/**
 * Describes the message SpaceX.API.Device.BridgeNetworkInterface.
 * Use `create(BridgeNetworkInterfaceSchema)` to create a new message.
 */
export const BridgeNetworkInterfaceSchema: GenMessage<BridgeNetworkInterface> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 14);

/**
 * @generated from message SpaceX.API.Device.LLAPosition
 */
export type LLAPosition = Message<'SpaceX.API.Device.LLAPosition'> & {
  /**
   * @generated from field: double lat = 1;
   */
  lat: number;

  /**
   * @generated from field: double lon = 2;
   */
  lon: number;

  /**
   * @generated from field: double alt = 3;
   */
  alt: number;
};

/**
 * Describes the message SpaceX.API.Device.LLAPosition.
 * Use `create(LLAPositionSchema)` to create a new message.
 */
export const LLAPositionSchema: GenMessage<LLAPosition> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 15);

/**
 * @generated from message SpaceX.API.Device.ECEFPosition
 */
export type ECEFPosition = Message<'SpaceX.API.Device.ECEFPosition'> & {
  /**
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;

  /**
   * @generated from field: double z = 3;
   */
  z: number;
};

/**
 * Describes the message SpaceX.API.Device.ECEFPosition.
 * Use `create(ECEFPositionSchema)` to create a new message.
 */
export const ECEFPositionSchema: GenMessage<ECEFPosition> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 16);

/**
 * @generated from message SpaceX.API.Device.Quaternion
 */
export type Quaternion = Message<'SpaceX.API.Device.Quaternion'> & {
  /**
   * @generated from field: float q_scalar = 1;
   */
  qScalar: number;

  /**
   * @generated from field: float q_x = 2;
   */
  qX: number;

  /**
   * @generated from field: float q_y = 3;
   */
  qY: number;

  /**
   * @generated from field: float q_z = 4;
   */
  qZ: number;
};

/**
 * Describes the message SpaceX.API.Device.Quaternion.
 * Use `create(QuaternionSchema)` to create a new message.
 */
export const QuaternionSchema: GenMessage<Quaternion> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 17);

/**
 * @generated from message SpaceX.API.Device.InitiateRemoteSshRequest
 */
export type InitiateRemoteSshRequest = Message<'SpaceX.API.Device.InitiateRemoteSshRequest'> & {};

/**
 * Describes the message SpaceX.API.Device.InitiateRemoteSshRequest.
 * Use `create(InitiateRemoteSshRequestSchema)` to create a new message.
 */
export const InitiateRemoteSshRequestSchema: GenMessage<InitiateRemoteSshRequest> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 18);

/**
 * @generated from message SpaceX.API.Device.InitiateRemoteSshResponse
 */
export type InitiateRemoteSshResponse = Message<'SpaceX.API.Device.InitiateRemoteSshResponse'> & {
  /**
   * @generated from field: uint32 port = 1;
   */
  port: number;

  /**
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * @generated from field: bytes stsafe = 3;
   */
  stsafe: Uint8Array;
};

/**
 * Describes the message SpaceX.API.Device.InitiateRemoteSshResponse.
 * Use `create(InitiateRemoteSshResponseSchema)` to create a new message.
 */
export const InitiateRemoteSshResponseSchema: GenMessage<InitiateRemoteSshResponse> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 19);

/**
 * @generated from message SpaceX.API.Device.SoftwareUpdateRequest
 */
export type SoftwareUpdateRequest = Message<'SpaceX.API.Device.SoftwareUpdateRequest'> & {
  /**
   * @generated from field: uint64 stream_id = 1;
   */
  streamId: bigint;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * @generated from field: bool open = 3;
   */
  open: boolean;

  /**
   * @generated from field: bool close = 4;
   */
  close: boolean;
};

/**
 * Describes the message SpaceX.API.Device.SoftwareUpdateRequest.
 * Use `create(SoftwareUpdateRequestSchema)` to create a new message.
 */
export const SoftwareUpdateRequestSchema: GenMessage<SoftwareUpdateRequest> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 20);

/**
 * @generated from message SpaceX.API.Device.SoftwareUpdateResponse
 */
export type SoftwareUpdateResponse = Message<'SpaceX.API.Device.SoftwareUpdateResponse'> & {};

/**
 * Describes the message SpaceX.API.Device.SoftwareUpdateResponse.
 * Use `create(SoftwareUpdateResponseSchema)` to create a new message.
 */
export const SoftwareUpdateResponseSchema: GenMessage<SoftwareUpdateResponse> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 21);

/**
 * @generated from message SpaceX.API.Device.EventLog
 */
export type EventLog = Message<'SpaceX.API.Device.EventLog'> & {
  /**
   * @generated from field: repeated SpaceX.API.Device.UXEvent events = 1;
   */
  events: UXEvent[];

  /**
   * @generated from field: int64 start_timestamp_ns = 2;
   */
  startTimestampNs: bigint;

  /**
   * @generated from field: int64 current_timestamp_ns = 3;
   */
  currentTimestampNs: bigint;
};

/**
 * Describes the message SpaceX.API.Device.EventLog.
 * Use `create(EventLogSchema)` to create a new message.
 */
export const EventLogSchema: GenMessage<EventLog> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 22);

/**
 * @generated from message SpaceX.API.Device.UXEvent
 */
export type UXEvent = Message<'SpaceX.API.Device.UXEvent'> & {
  /**
   * @generated from field: SpaceX.API.Device.EventSeverity severity = 1;
   */
  severity: EventSeverity;

  /**
   * @generated from field: SpaceX.API.Device.EventReason reason = 2;
   */
  reason: EventReason;

  /**
   * @generated from field: int64 start_timestamp_ns = 3;
   */
  startTimestampNs: bigint;

  /**
   * @generated from field: uint64 duration_ns = 4;
   */
  durationNs: bigint;
};

/**
 * Describes the message SpaceX.API.Device.UXEvent.
 * Use `create(UXEventSchema)` to create a new message.
 */
export const UXEventSchema: GenMessage<UXEvent> =
  /*@__PURE__*/
  messageDesc(file_spacex_api_device_common, 23);

/**
 * @generated from enum SpaceX.API.Device.BootReason
 */
export enum BootReason {
  /**
   * @generated from enum value: BOOT_REASON_UNKNOWN = 0;
   */
  BOOT_REASON_UNKNOWN = 0,

  /**
   * @generated from enum value: FORGOTTEN = 1;
   */
  FORGOTTEN = 1,

  /**
   * @generated from enum value: POWER_CYCLE = 2;
   */
  POWER_CYCLE = 2,

  /**
   * @generated from enum value: COMMAND = 3;
   */
  COMMAND = 3,

  /**
   * @generated from enum value: SOFTWARE_UPDATE = 4;
   */
  SOFTWARE_UPDATE = 4,

  /**
   * @generated from enum value: CONFIG_UPDATE = 5;
   */
  CONFIG_UPDATE = 5,

  /**
   * @generated from enum value: UPTIME_FDIR = 6;
   */
  UPTIME_FDIR = 6,

  /**
   * @generated from enum value: REPEATER_FDIR = 7;
   */
  REPEATER_FDIR = 7,

  /**
   * @generated from enum value: AVIATION_ETH_WAN_FDIR = 8;
   */
  AVIATION_ETH_WAN_FDIR = 8,

  /**
   * @generated from enum value: KERNEL_PANIC = 9;
   */
  KERNEL_PANIC = 9,

  /**
   * @generated from enum value: INTENTIONAL_KERNEL_PANIC = 14;
   */
  INTENTIONAL_KERNEL_PANIC = 14,

  /**
   * @generated from enum value: MCU_BRINGUP_FAILED_FDIR = 11;
   */
  MCU_BRINGUP_FAILED_FDIR = 11,

  /**
   * @generated from enum value: AVIATION_OUTAGE_FDIR = 12;
   */
  AVIATION_OUTAGE_FDIR = 12,

  /**
   * @generated from enum value: SOFTWARE_WATCHDOG = 13;
   */
  SOFTWARE_WATCHDOG = 13,

  /**
   * @generated from enum value: HARDWARE_WATCHDOG = 15;
   */
  HARDWARE_WATCHDOG = 15,

  /**
   * @generated from enum value: REPEATER_UNTRUSTED_FDIR = 16;
   */
  REPEATER_UNTRUSTED_FDIR = 16,
}

/**
 * Describes the enum SpaceX.API.Device.BootReason.
 */
export const BootReasonSchema: GenEnum<BootReason> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_common, 0);

/**
 * @generated from enum SpaceX.API.Device.EventSeverity
 */
export enum EventSeverity {
  /**
   * @generated from enum value: EVENT_SEVERITY_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: EVENT_SEVERITY_WARNING = 1;
   */
  WARNING = 1,

  /**
   * @generated from enum value: EVENT_SEVERITY_CAUTION = 2;
   */
  CAUTION = 2,

  /**
   * @generated from enum value: EVENT_SEVERITY_ADVISORY = 3;
   */
  ADVISORY = 3,
}

/**
 * Describes the enum SpaceX.API.Device.EventSeverity.
 */
export const EventSeveritySchema: GenEnum<EventSeverity> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_common, 1);

/**
 * @generated from enum SpaceX.API.Device.EventReason
 */
export enum EventReason {
  /**
   * @generated from enum value: EVENT_REASON_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_UNKNOWN = 1;
   */
  OUTAGE_UNKNOWN = 1,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_BOOTING = 2;
   */
  OUTAGE_BOOTING = 2,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_STOWED = 3;
   */
  OUTAGE_STOWED = 3,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_THERMAL_SHUTDOWN = 4;
   */
  OUTAGE_THERMAL_SHUTDOWN = 4,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_NO_SCHEDULE = 5;
   */
  OUTAGE_NO_SCHEDULE = 5,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_NO_SATS = 6;
   */
  OUTAGE_NO_SATS = 6,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_OBSTRUCTED = 7;
   */
  OUTAGE_OBSTRUCTED = 7,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_NO_DOWNLINK = 8;
   */
  OUTAGE_NO_DOWNLINK = 8,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_NO_PINGS = 9;
   */
  OUTAGE_NO_PINGS = 9,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_SLEEPING = 10;
   */
  OUTAGE_SLEEPING = 10,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_MOVING_WHILE_NOT_ALLOWED = 11;
   */
  OUTAGE_MOVING_WHILE_NOT_ALLOWED = 11,

  /**
   * @generated from enum value: EVENT_REASON_OUTAGE_SKY_SEARCH = 19;
   */
  OUTAGE_SKY_SEARCH = 19,

  /**
   * @generated from enum value: EVENT_REASON_UT_ALERT_RAIN_SNR_PERSISTENTLY_LOW = 22;
   */
  UT_ALERT_RAIN_SNR_PERSISTENTLY_LOW = 22,

  /**
   * @generated from enum value: EVENT_REASON_UT_ALERT_ETH_NO_LINK = 23;
   */
  UT_ALERT_ETH_NO_LINK = 23,

  /**
   * @generated from enum value: EVENT_REASON_UT_ALERT_ETH_SLOW_LINK = 24;
   */
  UT_ALERT_ETH_SLOW_LINK = 24,

  /**
   * @generated from enum value: EVENT_REASON_UT_ALERT_ETH_SLOW_LINK_100 = 25;
   */
  UT_ALERT_ETH_SLOW_LINK_100 = 25,

  /**
   * @generated from enum value: EVENT_REASON_HIGH_DOWNLINK_PACKET_LOSS = 12;
   */
  HIGH_DOWNLINK_PACKET_LOSS = 12,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_FACTORY_RESET = 13;
   */
  ROUTER_FACTORY_RESET = 13,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_REBOOT = 14;
   */
  ROUTER_REBOOT = 14,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_POWER_CYCLE = 15;
   */
  ROUTER_POWER_CYCLE = 15,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_CONFIG_UPDATE = 16;
   */
  ROUTER_CONFIG_UPDATE = 16,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_SOFTWARE_UPDATE = 17;
   */
  ROUTER_SOFTWARE_UPDATE = 17,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_THERMAL_THROTTLED = 18;
   */
  ROUTER_THERMAL_THROTTLED = 18,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_REBOOT_CONFIG_UPDATE = 20;
   */
  ROUTER_REBOOT_CONFIG_UPDATE = 20,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_PUBLIC_IPV4_CHANGE = 21;
   */
  ROUTER_PUBLIC_IPV4_CHANGE = 21,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_POP_IPV4_PING_DROP = 26;
   */
  ROUTER_POP_IPV4_PING_DROP = 26,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_POP_IPV6_PING_DROP = 27;
   */
  ROUTER_POP_IPV6_PING_DROP = 27,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_LAN_ETH_HIGH_PACKET_LOSS = 28;
   */
  ROUTER_LAN_ETH_HIGH_PACKET_LOSS = 28,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_WAN_ETH_HIGH_PACKET_LOSS = 29;
   */
  ROUTER_WAN_ETH_HIGH_PACKET_LOSS = 29,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_DHCP_SERVER_FAIL_TO_START = 30;
   */
  ROUTER_DHCP_SERVER_FAIL_TO_START = 30,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_DHCP_SERVER_EXHAUSTED = 31;
   */
  ROUTER_DHCP_SERVER_EXHAUSTED = 31,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_DNS_IPV4_SERVER_FAIL_TO_START = 32;
   */
  ROUTER_DNS_IPV4_SERVER_FAIL_TO_START = 32,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_DNS_IPV6_SERVER_FAIL_TO_START = 33;
   */
  ROUTER_DNS_IPV6_SERVER_FAIL_TO_START = 33,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_SET_CUSTOM_DNS_DISALLOWED = 34;
   */
  ROUTER_SET_CUSTOM_DNS_DISALLOWED = 34,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_SET_CUSTOM_DNS_ALLOWED = 35;
   */
  ROUTER_SET_CUSTOM_DNS_ALLOWED = 35,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_MAX_WIRELESS_CLIENTS = 36;
   */
  ROUTER_MAX_WIRELESS_CLIENTS = 36,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_MAX_5GHIGH_WIRELESS_CLIENTS = 37;
   */
  ROUTER_MAX_5GHIGH_WIRELESS_CLIENTS = 37,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_MESH_TOPOLOGY_CHANGING_OFTEN = 38;
   */
  ROUTER_MESH_TOPOLOGY_CHANGING_OFTEN = 38,

  /**
   * @generated from enum value: EVENT_REASON_ROUTER_CONNTRACK_FULL = 39;
   */
  ROUTER_CONNTRACK_FULL = 39,
}

/**
 * Describes the enum SpaceX.API.Device.EventReason.
 */
export const EventReasonSchema: GenEnum<EventReason> =
  /*@__PURE__*/
  enumDesc(file_spacex_api_device_common, 2);
