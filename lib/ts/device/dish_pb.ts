// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file spacex_api/device/dish.proto (package SpaceX.API.Device, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { AccountShard } from "./account_shard_pb";
import { file_spacex_api_device_account_shard } from "./account_shard_pb";
import type { ChallengeResponse, DeviceInfo, DeviceState, EventLog, Quaternion } from "./common_pb";
import { file_spacex_api_device_common } from "./common_pb";
import type { DishConfig } from "./dish_config_pb";
import { file_spacex_api_device_dish_config } from "./dish_config_pb";
import type { DishActivateRssiScan, DishGetRssiScanResult } from "./rssi_scan_pb";
import { file_spacex_api_device_rssi_scan } from "./rssi_scan_pb";
import type { UtDisablementCode } from "../satellites/network/ut_disablement_codes_pb";
import { file_spacex_api_satellites_network_ut_disablement_codes } from "../satellites/network/ut_disablement_codes_pb";
import type { RateLimitReason } from "../telemetron/public/integrations/rate_limit_reason_pb";
import { file_spacex_api_telemetron_public_integrations_rate_limit_reason } from "../telemetron/public/integrations/rate_limit_reason_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spacex_api/device/dish.proto.
 */
export const file_spacex_api_device_dish: GenFile = /*@__PURE__*/
  fileDesc("", [file_spacex_api_device_account_shard, file_spacex_api_device_common, file_spacex_api_device_dish_config, file_spacex_api_device_rssi_scan, file_spacex_api_satellites_network_ut_disablement_codes, file_spacex_api_telemetron_public_integrations_rate_limit_reason]);

/**
 * @generated from message SpaceX.API.Device.DishStowRequest
 */
export type DishStowRequest = Message<"SpaceX.API.Device.DishStowRequest"> & {
  /**
   * @generated from field: bool unstow = 1;
   */
  unstow: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishStowRequest.
 * Use `create(DishStowRequestSchema)` to create a new message.
 */
export const DishStowRequestSchema: GenMessage<DishStowRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 0);

/**
 * @generated from message SpaceX.API.Device.DishStowResponse
 */
export type DishStowResponse = Message<"SpaceX.API.Device.DishStowResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishStowResponse.
 * Use `create(DishStowResponseSchema)` to create a new message.
 */
export const DishStowResponseSchema: GenMessage<DishStowResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 1);

/**
 * @generated from message SpaceX.API.Device.DishAviationTestRequest
 */
export type DishAviationTestRequest = Message<"SpaceX.API.Device.DishAviationTestRequest"> & {
  /**
   * @generated from field: float thermal_demand_fraction = 1;
   */
  thermalDemandFraction: number;

  /**
   * @generated from field: bool apply_thermal_demand_fraction = 2;
   */
  applyThermalDemandFraction: boolean;

  /**
   * @generated from field: SpaceX.API.Device.DishAviationTestRequest.EthSpeed eth_speed = 3;
   */
  ethSpeed: DishAviationTestRequest_EthSpeed;

  /**
   * @generated from field: bool apply_eth_speed = 4;
   */
  applyEthSpeed: boolean;

  /**
   * @generated from field: uint32 eth_amplitude_registers = 5;
   */
  ethAmplitudeRegisters: number;

  /**
   * @generated from field: bool apply_eth_amplitude_registers = 6;
   */
  applyEthAmplitudeRegisters: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishAviationTestRequest.
 * Use `create(DishAviationTestRequestSchema)` to create a new message.
 */
export const DishAviationTestRequestSchema: GenMessage<DishAviationTestRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 2);

/**
 * @generated from enum SpaceX.API.Device.DishAviationTestRequest.EthSpeed
 */
export enum DishAviationTestRequest_EthSpeed {
  /**
   * @generated from enum value: ETH_SPEED_100_MBPS = 0;
   */
  ETH_SPEED_100_MBPS = 0,

  /**
   * @generated from enum value: ETH_SPEED_1000_MBPS = 1;
   */
  ETH_SPEED_1000_MBPS = 1,
}

/**
 * Describes the enum SpaceX.API.Device.DishAviationTestRequest.EthSpeed.
 */
export const DishAviationTestRequest_EthSpeedSchema: GenEnum<DishAviationTestRequest_EthSpeed> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 2, 0);

/**
 * @generated from message SpaceX.API.Device.DishAviationTestResponse
 */
export type DishAviationTestResponse = Message<"SpaceX.API.Device.DishAviationTestResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishAviationTestResponse.
 * Use `create(DishAviationTestResponseSchema)` to create a new message.
 */
export const DishAviationTestResponseSchema: GenMessage<DishAviationTestResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 3);

/**
 * @generated from message SpaceX.API.Device.DishGetContextRequest
 */
export type DishGetContextRequest = Message<"SpaceX.API.Device.DishGetContextRequest"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishGetContextRequest.
 * Use `create(DishGetContextRequestSchema)` to create a new message.
 */
export const DishGetContextRequestSchema: GenMessage<DishGetContextRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 4);

/**
 * @generated from message SpaceX.API.Device.DishGetContextResponse
 */
export type DishGetContextResponse = Message<"SpaceX.API.Device.DishGetContextResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.DeviceInfo device_info = 1;
   */
  deviceInfo?: DeviceInfo;

  /**
   * @generated from field: SpaceX.API.Device.DeviceState device_state = 7;
   */
  deviceState?: DeviceState;

  /**
   * @generated from field: float obstruction_fraction = 2;
   */
  obstructionFraction: number;

  /**
   * @generated from field: float obstruction_time = 20;
   */
  obstructionTime: number;

  /**
   * @generated from field: float obstruction_valid_s = 3;
   */
  obstructionValidS: number;

  /**
   * @generated from field: bool obstruction_current = 12;
   */
  obstructionCurrent: boolean;

  /**
   * @generated from field: uint32 cell_id = 4;
   */
  cellId: number;

  /**
   * @generated from field: uint32 pop_rack_id = 5;
   */
  popRackId: number;

  /**
   * @generated from field: uint32 initial_satellite_id = 8;
   */
  initialSatelliteId: number;

  /**
   * @generated from field: uint32 initial_gateway_id = 9;
   */
  initialGatewayId: number;

  /**
   * @generated from field: bool on_backup_beam = 10;
   */
  onBackupBeam: boolean;

  /**
   * @generated from field: float seconds_to_slot_end = 6;
   */
  secondsToSlotEnd: number;

  /**
   * @generated from field: bool debug_telemetry_enabled = 11;
   */
  debugTelemetryEnabled: boolean;

  /**
   * @generated from field: float pop_ping_drop_rate_15s_mean = 13;
   */
  popPingDropRate15sMean: number;

  /**
   * @generated from field: float pop_ping_latency_ms_15s_mean = 14;
   */
  popPingLatencyMs15sMean: number;

  /**
   * @generated from field: float seconds_since_last_1s_outage = 15;
   */
  secondsSinceLast1sOutage: number;

  /**
   * @generated from field: float seconds_since_last_2s_outage = 16;
   */
  secondsSinceLast2sOutage: number;

  /**
   * @generated from field: float seconds_since_last_5s_outage = 17;
   */
  secondsSinceLast5sOutage: number;

  /**
   * @generated from field: float seconds_since_last_15s_outage = 18;
   */
  secondsSinceLast15sOutage: number;

  /**
   * @generated from field: float seconds_since_last_60s_outage = 19;
   */
  secondsSinceLast60sOutage: number;

  /**
   * @generated from field: bool outage_1s_within_1h = 23;
   */
  outage1sWithin1h: boolean;

  /**
   * @generated from field: bool outage_2s_within_1h = 24;
   */
  outage2sWithin1h: boolean;

  /**
   * @generated from field: bool outage_5s_within_1h = 25;
   */
  outage5sWithin1h: boolean;

  /**
   * @generated from field: SpaceX.API.Satellites.Network.UtDisablementCode disablement_code = 21;
   */
  disablementCode: UtDisablementCode;

  /**
   * @generated from field: float ku_mac_active_ratio = 22;
   */
  kuMacActiveRatio: number;
};

/**
 * Describes the message SpaceX.API.Device.DishGetContextResponse.
 * Use `create(DishGetContextResponseSchema)` to create a new message.
 */
export const DishGetContextResponseSchema: GenMessage<DishGetContextResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 5);

/**
 * @generated from message SpaceX.API.Device.DishOutage
 */
export type DishOutage = Message<"SpaceX.API.Device.DishOutage"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishOutage.Cause cause = 1;
   */
  cause: DishOutage_Cause;

  /**
   * @generated from field: int64 start_timestamp_ns = 2;
   */
  startTimestampNs: bigint;

  /**
   * @generated from field: uint64 duration_ns = 3;
   */
  durationNs: bigint;

  /**
   * @generated from field: bool did_switch = 4;
   */
  didSwitch: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishOutage.
 * Use `create(DishOutageSchema)` to create a new message.
 */
export const DishOutageSchema: GenMessage<DishOutage> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 6);

/**
 * @generated from enum SpaceX.API.Device.DishOutage.Cause
 */
export enum DishOutage_Cause {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: BOOTING = 1;
   */
  BOOTING = 1,

  /**
   * @generated from enum value: STOWED = 2;
   */
  STOWED = 2,

  /**
   * @generated from enum value: THERMAL_SHUTDOWN = 3;
   */
  THERMAL_SHUTDOWN = 3,

  /**
   * @generated from enum value: NO_SCHEDULE = 4;
   */
  NO_SCHEDULE = 4,

  /**
   * @generated from enum value: NO_SATS = 5;
   */
  NO_SATS = 5,

  /**
   * @generated from enum value: OBSTRUCTED = 6;
   */
  OBSTRUCTED = 6,

  /**
   * @generated from enum value: NO_DOWNLINK = 7;
   */
  NO_DOWNLINK = 7,

  /**
   * @generated from enum value: NO_PINGS = 8;
   */
  NO_PINGS = 8,

  /**
   * @generated from enum value: ACTUATOR_ACTIVITY = 9;
   */
  ACTUATOR_ACTIVITY = 9,

  /**
   * @generated from enum value: CABLE_TEST = 10;
   */
  CABLE_TEST = 10,

  /**
   * @generated from enum value: SLEEPING = 11;
   */
  SLEEPING = 11,

  /**
   * @generated from enum value: SKY_SEARCH = 13;
   */
  SKY_SEARCH = 13,
}

/**
 * Describes the enum SpaceX.API.Device.DishOutage.Cause.
 */
export const DishOutage_CauseSchema: GenEnum<DishOutage_Cause> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 6, 0);

/**
 * @generated from message SpaceX.API.Device.DishGetHistoryResponse
 */
export type DishGetHistoryResponse = Message<"SpaceX.API.Device.DishGetHistoryResponse"> & {
  /**
   * @generated from field: uint64 current = 1;
   */
  current: bigint;

  /**
   * @generated from field: repeated float pop_ping_drop_rate = 1001;
   */
  popPingDropRate: number[];

  /**
   * @generated from field: repeated float pop_ping_latency_ms = 1002;
   */
  popPingLatencyMs: number[];

  /**
   * @generated from field: repeated float downlink_throughput_bps = 1003;
   */
  downlinkThroughputBps: number[];

  /**
   * @generated from field: repeated float uplink_throughput_bps = 1004;
   */
  uplinkThroughputBps: number[];

  /**
   * @generated from field: repeated SpaceX.API.Device.DishOutage outages = 1009;
   */
  outages: DishOutage[];

  /**
   * @generated from field: repeated float power_in = 1010;
   */
  powerIn: number[];

  /**
   * @generated from field: SpaceX.API.Device.EventLog event_log = 1011;
   */
  eventLog?: EventLog;
};

/**
 * Describes the message SpaceX.API.Device.DishGetHistoryResponse.
 * Use `create(DishGetHistoryResponseSchema)` to create a new message.
 */
export const DishGetHistoryResponseSchema: GenMessage<DishGetHistoryResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 7);

/**
 * @generated from message SpaceX.API.Device.RouterInfo
 */
export type RouterInfo = Message<"SpaceX.API.Device.RouterInfo"> & {
  /**
   * @generated from field: SpaceX.API.Device.RouterRole role = 1;
   */
  role: RouterRole;

  /**
   * @generated from field: int64 last_seen = 2;
   */
  lastSeen: bigint;
};

/**
 * Describes the message SpaceX.API.Device.RouterInfo.
 * Use `create(RouterInfoSchema)` to create a new message.
 */
export const RouterInfoSchema: GenMessage<RouterInfo> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 8);

/**
 * @generated from message SpaceX.API.Device.DishGetStatusResponse
 */
export type DishGetStatusResponse = Message<"SpaceX.API.Device.DishGetStatusResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.DeviceInfo device_info = 1;
   */
  deviceInfo?: DeviceInfo;

  /**
   * @generated from field: SpaceX.API.Device.DeviceState device_state = 2;
   */
  deviceState?: DeviceState;

  /**
   * @generated from field: SpaceX.API.Device.DishAlerts alerts = 1005;
   */
  alerts?: DishAlerts;

  /**
   * @generated from field: SpaceX.API.Device.DishOutage outage = 1014;
   */
  outage?: DishOutage;

  /**
   * @generated from field: SpaceX.API.Device.DishGpsStats gps_stats = 1015;
   */
  gpsStats?: DishGpsStats;

  /**
   * @generated from field: float seconds_to_first_nonempty_slot = 1002;
   */
  secondsToFirstNonemptySlot: number;

  /**
   * @generated from field: float pop_ping_drop_rate = 1003;
   */
  popPingDropRate: number;

  /**
   * @generated from field: float downlink_throughput_bps = 1007;
   */
  downlinkThroughputBps: number;

  /**
   * @generated from field: float uplink_throughput_bps = 1008;
   */
  uplinkThroughputBps: number;

  /**
   * @generated from field: float pop_ping_latency_ms = 1009;
   */
  popPingLatencyMs: number;

  /**
   * @generated from field: SpaceX.API.Device.DishObstructionStats obstruction_stats = 1004;
   */
  obstructionStats?: DishObstructionStats;

  /**
   * @generated from field: bool stow_requested = 1010;
   */
  stowRequested: boolean;

  /**
   * @generated from field: float boresight_azimuth_deg = 1011;
   */
  boresightAzimuthDeg: number;

  /**
   * @generated from field: float boresight_elevation_deg = 1012;
   */
  boresightElevationDeg: number;

  /**
   * @generated from field: int32 eth_speed_mbps = 1016;
   */
  ethSpeedMbps: number;

  /**
   * @generated from field: SpaceX.API.Device.UserMobilityClass mobility_class = 1017;
   */
  mobilityClass: UserMobilityClass;

  /**
   * @generated from field: bool is_snr_above_noise_floor = 1018;
   */
  isSnrAboveNoiseFloor: boolean;

  /**
   * @generated from field: SpaceX.API.Device.DishReadyStates ready_states = 1019;
   */
  readyStates?: DishReadyStates;

  /**
   * @generated from field: SpaceX.API.Device.UserClassOfService class_of_service = 1020;
   */
  classOfService: UserClassOfService;

  /**
   * @generated from field: SpaceX.API.Device.SoftwareUpdateState software_update_state = 1021;
   */
  softwareUpdateState: SoftwareUpdateState;

  /**
   * @generated from field: bool swupdate_reboot_ready = 1030;
   */
  swupdateRebootReady: boolean;

  /**
   * @generated from field: SpaceX.API.Device.RebootReason reboot_reason = 1032;
   */
  rebootReason: RebootReason;

  /**
   * @generated from field: SpaceX.API.Device.SoftwareUpdateStats software_update_stats = 1026;
   */
  softwareUpdateStats?: SoftwareUpdateStats;

  /**
   * @generated from field: SpaceX.API.Device.AlignmentStats alignment_stats = 1027;
   */
  alignmentStats?: AlignmentStats;

  /**
   * @generated from field: bool is_snr_persistently_low = 1022;
   */
  isSnrPersistentlyLow: boolean;

  /**
   * @generated from field: SpaceX.API.Device.HasActuators has_actuators = 1023;
   */
  hasActuators: HasActuators;

  /**
   * @generated from field: SpaceX.API.Satellites.Network.UtDisablementCode disablement_code = 1024;
   */
  disablementCode: UtDisablementCode;

  /**
   * @generated from field: SpaceX.API.Telemetron.Public.Integrations.RateLimitReason dl_bandwidth_restricted_reason = 1044;
   */
  dlBandwidthRestrictedReason: RateLimitReason;

  /**
   * @generated from field: SpaceX.API.Telemetron.Public.Integrations.RateLimitReason ul_bandwidth_restricted_reason = 1045;
   */
  ulBandwidthRestrictedReason: RateLimitReason;

  /**
   * @generated from field: bool has_signed_cals = 1025;
   */
  hasSignedCals: boolean;

  /**
   * @generated from field: SpaceX.API.Device.DishConfig config = 2000;
   */
  config?: DishConfig;

  /**
   * @generated from field: SpaceX.API.Device.InitializationDurationSeconds initialization_duration_seconds = 1028;
   */
  initializationDurationSeconds?: InitializationDurationSeconds;

  /**
   * @generated from field: bool is_cell_disabled = 1029;
   */
  isCellDisabled: boolean;

  /**
   * @generated from field: int32 seconds_until_swupdate_reboot_possible = 1031;
   */
  secondsUntilSwupdateRebootPossible: number;

  /**
   * @generated from field: bool high_power_test_mode = 1033;
   */
  highPowerTestMode: boolean;

  /**
   * @generated from field: repeated string connected_routers = 1040;
   */
  connectedRouters: string[];

  /**
   * @generated from field: SpaceX.API.Device.PLCStats plc_stats = 1041;
   */
  plcStats?: PLCStats;

  /**
   * @generated from field: bool is_moving_fast_persisted = 1042;
   */
  isMovingFastPersisted: boolean;

  /**
   * @generated from field: SpaceX.API.Device.DishUpsuStats upsu_stats = 1043;
   */
  upsuStats?: DishUpsuStats;

  /**
   * @generated from field: SpaceX.API.Device.DishApsStats aps_stats = 1048;
   */
  apsStats?: DishApsStats;

  /**
   * @generated from field: SpaceX.API.Device.Quaternion ned2dish_quaternion = 1049;
   */
  ned2dishQuaternion?: Quaternion;

  /**
   * @generated from field: map<string, SpaceX.API.Device.RouterInfo> downstream_routers = 1050;
   */
  downstreamRouters: { [key: string]: RouterInfo };

  /**
   * @generated from field: SpaceX.API.Device.AccountShard account_shard = 1051;
   */
  accountShard: AccountShard;
};

/**
 * Describes the message SpaceX.API.Device.DishGetStatusResponse.
 * Use `create(DishGetStatusResponseSchema)` to create a new message.
 */
export const DishGetStatusResponseSchema: GenMessage<DishGetStatusResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 9);

/**
 * @generated from message SpaceX.API.Device.DishGetObstructionMapRequest
 */
export type DishGetObstructionMapRequest = Message<"SpaceX.API.Device.DishGetObstructionMapRequest"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishGetObstructionMapRequest.
 * Use `create(DishGetObstructionMapRequestSchema)` to create a new message.
 */
export const DishGetObstructionMapRequestSchema: GenMessage<DishGetObstructionMapRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 10);

/**
 * @generated from message SpaceX.API.Device.DishGetObstructionMapResponse
 */
export type DishGetObstructionMapResponse = Message<"SpaceX.API.Device.DishGetObstructionMapResponse"> & {
  /**
   * @generated from field: uint32 num_rows = 1;
   */
  numRows: number;

  /**
   * @generated from field: uint32 num_cols = 2;
   */
  numCols: number;

  /**
   * @generated from field: repeated float snr = 3;
   */
  snr: number[];

  /**
   * @generated from field: float min_elevation_deg = 4 [deprecated = true];
   * @deprecated
   */
  minElevationDeg: number;

  /**
   * @generated from field: float max_theta_deg = 5;
   */
  maxThetaDeg: number;

  /**
   * @generated from field: SpaceX.API.Device.ObstructionMapReferenceFrame map_reference_frame = 6;
   */
  mapReferenceFrame: ObstructionMapReferenceFrame;
};

/**
 * Describes the message SpaceX.API.Device.DishGetObstructionMapResponse.
 * Use `create(DishGetObstructionMapResponseSchema)` to create a new message.
 */
export const DishGetObstructionMapResponseSchema: GenMessage<DishGetObstructionMapResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 11);

/**
 * @generated from message SpaceX.API.Device.DishAlerts
 */
export type DishAlerts = Message<"SpaceX.API.Device.DishAlerts"> & {
  /**
   * @generated from field: bool motors_stuck = 1;
   */
  motorsStuck: boolean;

  /**
   * @generated from field: bool thermal_throttle = 3;
   */
  thermalThrottle: boolean;

  /**
   * @generated from field: bool thermal_shutdown = 2;
   */
  thermalShutdown: boolean;

  /**
   * @generated from field: bool mast_not_near_vertical = 5;
   */
  mastNotNearVertical: boolean;

  /**
   * @generated from field: bool unexpected_location = 4;
   */
  unexpectedLocation: boolean;

  /**
   * @generated from field: bool slow_ethernet_speeds = 6;
   */
  slowEthernetSpeeds: boolean;

  /**
   * @generated from field: bool slow_ethernet_speeds_100 = 18;
   */
  slowEthernetSpeeds100: boolean;

  /**
   * @generated from field: bool roaming = 7;
   */
  roaming: boolean;

  /**
   * @generated from field: bool install_pending = 8;
   */
  installPending: boolean;

  /**
   * @generated from field: bool is_heating = 9;
   */
  isHeating: boolean;

  /**
   * @generated from field: bool power_supply_thermal_throttle = 10;
   */
  powerSupplyThermalThrottle: boolean;

  /**
   * @generated from field: bool is_power_save_idle = 11;
   */
  isPowerSaveIdle: boolean;

  /**
   * @generated from field: bool dbf_telem_stale = 14;
   */
  dbfTelemStale: boolean;

  /**
   * @generated from field: bool low_motor_current = 16;
   */
  lowMotorCurrent: boolean;

  /**
   * @generated from field: bool lower_signal_than_predicted = 17;
   */
  lowerSignalThanPredicted: boolean;

  /**
   * @generated from field: bool obstruction_map_reset = 19;
   */
  obstructionMapReset: boolean;

  /**
   * @generated from field: bool dish_water_detected = 20;
   */
  dishWaterDetected: boolean;

  /**
   * @generated from field: bool router_water_detected = 21;
   */
  routerWaterDetected: boolean;

  /**
   * @generated from field: bool upsu_router_port_slow = 22;
   */
  upsuRouterPortSlow: boolean;

  /**
   * @generated from field: bool no_ethernet_link = 23;
   */
  noEthernetLink: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishAlerts.
 * Use `create(DishAlertsSchema)` to create a new message.
 */
export const DishAlertsSchema: GenMessage<DishAlerts> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 12);

/**
 * @generated from message SpaceX.API.Device.DishReadyStates
 */
export type DishReadyStates = Message<"SpaceX.API.Device.DishReadyStates"> & {
  /**
   * @generated from field: bool cady = 1;
   */
  cady: boolean;

  /**
   * @generated from field: bool scp = 2;
   */
  scp: boolean;

  /**
   * @generated from field: bool l1l2 = 3;
   */
  l1l2: boolean;

  /**
   * @generated from field: bool xphy = 4;
   */
  xphy: boolean;

  /**
   * @generated from field: bool aap = 5;
   */
  aap: boolean;

  /**
   * @generated from field: bool rf = 6;
   */
  rf: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishReadyStates.
 * Use `create(DishReadyStatesSchema)` to create a new message.
 */
export const DishReadyStatesSchema: GenMessage<DishReadyStates> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 13);

/**
 * @generated from message SpaceX.API.Device.DishGpsStats
 */
export type DishGpsStats = Message<"SpaceX.API.Device.DishGpsStats"> & {
  /**
   * @generated from field: bool gps_valid = 1;
   */
  gpsValid: boolean;

  /**
   * @generated from field: uint32 gps_sats = 2;
   */
  gpsSats: number;

  /**
   * @generated from field: bool no_sats_after_ttff = 3;
   */
  noSatsAfterTtff: boolean;

  /**
   * @generated from field: bool inhibit_gps = 4;
   */
  inhibitGps: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishGpsStats.
 * Use `create(DishGpsStatsSchema)` to create a new message.
 */
export const DishGpsStatsSchema: GenMessage<DishGpsStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 14);

/**
 * @generated from message SpaceX.API.Device.SoftwareUpdateStats
 */
export type SoftwareUpdateStats = Message<"SpaceX.API.Device.SoftwareUpdateStats"> & {
  /**
   * @generated from field: SpaceX.API.Device.SoftwareUpdateState software_update_state = 1;
   */
  softwareUpdateState: SoftwareUpdateState;

  /**
   * @generated from field: float software_update_progress = 2;
   */
  softwareUpdateProgress: number;

  /**
   * @generated from field: bool update_requires_reboot = 3;
   */
  updateRequiresReboot: boolean;

  /**
   * @generated from field: int64 reboot_scheduled_utc_time = 4;
   */
  rebootScheduledUtcTime: bigint;
};

/**
 * Describes the message SpaceX.API.Device.SoftwareUpdateStats.
 * Use `create(SoftwareUpdateStatsSchema)` to create a new message.
 */
export const SoftwareUpdateStatsSchema: GenMessage<SoftwareUpdateStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 15);

/**
 * @generated from message SpaceX.API.Device.AlignmentStats
 */
export type AlignmentStats = Message<"SpaceX.API.Device.AlignmentStats"> & {
  /**
   * @generated from field: SpaceX.API.Device.HasActuators has_actuators = 1;
   */
  hasActuators: HasActuators;

  /**
   * @generated from field: SpaceX.API.Device.ActuatorState actuator_state = 2;
   */
  actuatorState: ActuatorState;

  /**
   * @generated from field: float tilt_angle_deg = 3;
   */
  tiltAngleDeg: number;

  /**
   * @generated from field: float boresight_azimuth_deg = 4;
   */
  boresightAzimuthDeg: number;

  /**
   * @generated from field: float boresight_elevation_deg = 5;
   */
  boresightElevationDeg: number;

  /**
   * @generated from field: float desired_boresight_azimuth_deg = 8;
   */
  desiredBoresightAzimuthDeg: number;

  /**
   * @generated from field: float desired_boresight_elevation_deg = 9;
   */
  desiredBoresightElevationDeg: number;

  /**
   * @generated from field: SpaceX.API.Device.AttitudeEstimationState attitude_estimation_state = 6;
   */
  attitudeEstimationState: AttitudeEstimationState;

  /**
   * @generated from field: float attitude_uncertainty_deg = 7;
   */
  attitudeUncertaintyDeg: number;
};

/**
 * Describes the message SpaceX.API.Device.AlignmentStats.
 * Use `create(AlignmentStatsSchema)` to create a new message.
 */
export const AlignmentStatsSchema: GenMessage<AlignmentStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 16);

/**
 * @generated from message SpaceX.API.Device.DishObstructionStats
 */
export type DishObstructionStats = Message<"SpaceX.API.Device.DishObstructionStats"> & {
  /**
   * @generated from field: bool currently_obstructed = 5;
   */
  currentlyObstructed: boolean;

  /**
   * @generated from field: float fraction_obstructed = 1;
   */
  fractionObstructed: number;

  /**
   * @generated from field: float time_obstructed = 9;
   */
  timeObstructed: number;

  /**
   * @generated from field: float valid_s = 4;
   */
  validS: number;

  /**
   * @generated from field: uint32 patches_valid = 10;
   */
  patchesValid: number;

  /**
   * @generated from field: float avg_prolonged_obstruction_duration_s = 6;
   */
  avgProlongedObstructionDurationS: number;

  /**
   * @generated from field: float avg_prolonged_obstruction_interval_s = 7;
   */
  avgProlongedObstructionIntervalS: number;

  /**
   * @generated from field: bool avg_prolonged_obstruction_valid = 8;
   */
  avgProlongedObstructionValid: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishObstructionStats.
 * Use `create(DishObstructionStatsSchema)` to create a new message.
 */
export const DishObstructionStatsSchema: GenMessage<DishObstructionStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 17);

/**
 * @generated from message SpaceX.API.Device.DishUpsuStats
 */
export type DishUpsuStats = Message<"SpaceX.API.Device.DishUpsuStats"> & {
  /**
   * @generated from field: uint64 app_version = 2;
   */
  appVersion: bigint;

  /**
   * @generated from field: uint64 boot_version = 3;
   */
  bootVersion: bigint;

  /**
   * @generated from field: uint64 rom_version = 4;
   */
  romVersion: bigint;

  /**
   * @generated from field: int64 uptime = 5;
   */
  uptime: bigint;

  /**
   * @generated from field: float dish_power = 6;
   */
  dishPower: number;

  /**
   * @generated from field: float router_power = 7;
   */
  routerPower: number;

  /**
   * @generated from field: bool force_dev_signed_allowed = 8;
   */
  forceDevSignedAllowed: boolean;

  /**
   * @generated from field: bool debug_port_locked = 9;
   */
  debugPortLocked: boolean;

  /**
   * @generated from field: bool stsafe_certs_locked = 10;
   */
  stsafeCertsLocked: boolean;

  /**
   * @generated from field: bool stsafe_keys_locked = 11;
   */
  stsafeKeysLocked: boolean;

  /**
   * @generated from field: uint32 g0_locked = 12;
   */
  g0Locked: number;

  /**
   * @generated from field: uint32 g0_firmware_version = 13;
   */
  g0FirmwareVersion: number;

  /**
   * @generated from field: int32 board_rev = 14;
   */
  boardRev: number;

  /**
   * @generated from field: uint32 g0_board_id = 15;
   */
  g0BoardId: number;
};

/**
 * Describes the message SpaceX.API.Device.DishUpsuStats.
 * Use `create(DishUpsuStatsSchema)` to create a new message.
 */
export const DishUpsuStatsSchema: GenMessage<DishUpsuStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 18);

/**
 * @generated from message SpaceX.API.Device.DishApsStats
 */
export type DishApsStats = Message<"SpaceX.API.Device.DishApsStats"> & {
  /**
   * @generated from field: uint64 app_version = 2;
   */
  appVersion: bigint;

  /**
   * @generated from field: uint64 boot_version = 3;
   */
  bootVersion: bigint;

  /**
   * @generated from field: uint64 rom_version = 4;
   */
  romVersion: bigint;

  /**
   * @generated from field: int64 uptime = 5;
   */
  uptime: bigint;

  /**
   * @generated from field: float dish_power = 6;
   */
  dishPower: number;

  /**
   * @generated from field: bool force_dev_signed_allowed = 7;
   */
  forceDevSignedAllowed: boolean;

  /**
   * @generated from field: bool debug_port_locked = 8;
   */
  debugPortLocked: boolean;

  /**
   * @generated from field: int32 board_rev = 9;
   */
  boardRev: number;
};

/**
 * Describes the message SpaceX.API.Device.DishApsStats.
 * Use `create(DishApsStatsSchema)` to create a new message.
 */
export const DishApsStatsSchema: GenMessage<DishApsStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 19);

/**
 * @generated from message SpaceX.API.Device.InitializationDurationSeconds
 */
export type InitializationDurationSeconds = Message<"SpaceX.API.Device.InitializationDurationSeconds"> & {
  /**
   * @generated from field: int32 attitude_initialization = 1;
   */
  attitudeInitialization: number;

  /**
   * @generated from field: int32 burst_detected = 2;
   */
  burstDetected: number;

  /**
   * @generated from field: int32 ekf_converged = 3;
   */
  ekfConverged: number;

  /**
   * @generated from field: int32 first_cplane = 4;
   */
  firstCplane: number;

  /**
   * @generated from field: int32 first_pop_ping = 5;
   */
  firstPopPing: number;

  /**
   * @generated from field: int32 gps_valid = 6;
   */
  gpsValid: number;

  /**
   * @generated from field: int32 initial_network_entry = 7;
   */
  initialNetworkEntry: number;

  /**
   * @generated from field: int32 network_schedule = 8;
   */
  networkSchedule: number;

  /**
   * @generated from field: int32 rf_ready = 9;
   */
  rfReady: number;

  /**
   * @generated from field: int32 stable_connection = 10;
   */
  stableConnection: number;
};

/**
 * Describes the message SpaceX.API.Device.InitializationDurationSeconds.
 * Use `create(InitializationDurationSecondsSchema)` to create a new message.
 */
export const InitializationDurationSecondsSchema: GenMessage<InitializationDurationSeconds> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 20);

/**
 * @generated from message SpaceX.API.Device.DishAuthenticateResponse
 */
export type DishAuthenticateResponse = Message<"SpaceX.API.Device.DishAuthenticateResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.ChallengeResponse dish = 2;
   */
  dish?: ChallengeResponse;
};

/**
 * Describes the message SpaceX.API.Device.DishAuthenticateResponse.
 * Use `create(DishAuthenticateResponseSchema)` to create a new message.
 */
export const DishAuthenticateResponseSchema: GenMessage<DishAuthenticateResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 21);

/**
 * @generated from message SpaceX.API.Device.SelfTestRequest
 */
export type SelfTestRequest = Message<"SpaceX.API.Device.SelfTestRequest"> & {
  /**
   * @generated from field: bool detailed = 1;
   */
  detailed: boolean;
};

/**
 * Describes the message SpaceX.API.Device.SelfTestRequest.
 * Use `create(SelfTestRequestSchema)` to create a new message.
 */
export const SelfTestRequestSchema: GenMessage<SelfTestRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 22);

/**
 * @generated from message SpaceX.API.Device.SelfTestResponse
 */
export type SelfTestResponse = Message<"SpaceX.API.Device.SelfTestResponse"> & {
  /**
   * @generated from field: bool passed = 1;
   */
  passed: boolean;

  /**
   * @generated from field: string report = 2;
   */
  report: string;
};

/**
 * Describes the message SpaceX.API.Device.SelfTestResponse.
 * Use `create(SelfTestResponseSchema)` to create a new message.
 */
export const SelfTestResponseSchema: GenMessage<SelfTestResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 23);

/**
 * @generated from message SpaceX.API.Device.SetTestModeRequest
 */
export type SetTestModeRequest = Message<"SpaceX.API.Device.SetTestModeRequest"> & {
  /**
   * @generated from field: SpaceX.API.Device.SetTestModeRequest.RfMode rf_mode = 1;
   */
  rfMode: SetTestModeRequest_RfMode;

  /**
   * @generated from field: bool disable_loss_of_comm_fdir = 1001;
   */
  disableLossOfCommFdir: boolean;

  /**
   * @generated from field: bool enable_rules_override = 1002;
   */
  enableRulesOverride: boolean;
};

/**
 * Describes the message SpaceX.API.Device.SetTestModeRequest.
 * Use `create(SetTestModeRequestSchema)` to create a new message.
 */
export const SetTestModeRequestSchema: GenMessage<SetTestModeRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 24);

/**
 * @generated from enum SpaceX.API.Device.SetTestModeRequest.RfMode
 */
export enum SetTestModeRequest_RfMode {
  /**
   * @generated from enum value: RX = 0;
   */
  RX = 0,

  /**
   * @generated from enum value: IDLE = 1;
   */
  IDLE = 1,

  /**
   * @generated from enum value: TX = 2;
   */
  TX = 2,

  /**
   * @generated from enum value: CAL = 3;
   */
  CAL = 3,

  /**
   * @generated from enum value: USER = 4;
   */
  USER = 4,

  /**
   * @generated from enum value: NORMAL = 420;
   */
  NORMAL = 420,
}

/**
 * Describes the enum SpaceX.API.Device.SetTestModeRequest.RfMode.
 */
export const SetTestModeRequest_RfModeSchema: GenEnum<SetTestModeRequest_RfMode> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 24, 0);

/**
 * @generated from message SpaceX.API.Device.SetTestModeResponse
 */
export type SetTestModeResponse = Message<"SpaceX.API.Device.SetTestModeResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.SetTestModeResponse.
 * Use `create(SetTestModeResponseSchema)` to create a new message.
 */
export const SetTestModeResponseSchema: GenMessage<SetTestModeResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 25);

/**
 * @generated from message SpaceX.API.Device.DishSetConfigRequest
 */
export type DishSetConfigRequest = Message<"SpaceX.API.Device.DishSetConfigRequest"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishConfig dish_config = 1;
   */
  dishConfig?: DishConfig;
};

/**
 * Describes the message SpaceX.API.Device.DishSetConfigRequest.
 * Use `create(DishSetConfigRequestSchema)` to create a new message.
 */
export const DishSetConfigRequestSchema: GenMessage<DishSetConfigRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 26);

/**
 * @generated from message SpaceX.API.Device.DishSetConfigResponse
 */
export type DishSetConfigResponse = Message<"SpaceX.API.Device.DishSetConfigResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishConfig updated_dish_config = 1;
   */
  updatedDishConfig?: DishConfig;

  /**
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * Describes the message SpaceX.API.Device.DishSetConfigResponse.
 * Use `create(DishSetConfigResponseSchema)` to create a new message.
 */
export const DishSetConfigResponseSchema: GenMessage<DishSetConfigResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 27);

/**
 * @generated from message SpaceX.API.Device.DishGetConfigRequest
 */
export type DishGetConfigRequest = Message<"SpaceX.API.Device.DishGetConfigRequest"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishGetConfigRequest.
 * Use `create(DishGetConfigRequestSchema)` to create a new message.
 */
export const DishGetConfigRequestSchema: GenMessage<DishGetConfigRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 28);

/**
 * @generated from message SpaceX.API.Device.DishGetConfigResponse
 */
export type DishGetConfigResponse = Message<"SpaceX.API.Device.DishGetConfigResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishConfig dish_config = 1;
   */
  dishConfig?: DishConfig;
};

/**
 * Describes the message SpaceX.API.Device.DishGetConfigResponse.
 * Use `create(DishGetConfigResponseSchema)` to create a new message.
 */
export const DishGetConfigResponseSchema: GenMessage<DishGetConfigResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 29);

/**
 * @generated from message SpaceX.API.Device.DishInhibitRfRequest
 */
export type DishInhibitRfRequest = Message<"SpaceX.API.Device.DishInhibitRfRequest"> & {
  /**
   * @generated from field: bool inhibit_rf = 1;
   */
  inhibitRf: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishInhibitRfRequest.
 * Use `create(DishInhibitRfRequestSchema)` to create a new message.
 */
export const DishInhibitRfRequestSchema: GenMessage<DishInhibitRfRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 30);

/**
 * @generated from message SpaceX.API.Device.DishInhibitRfResponse
 */
export type DishInhibitRfResponse = Message<"SpaceX.API.Device.DishInhibitRfResponse"> & {
  /**
   * @generated from field: bool inhibit_rf = 1;
   */
  inhibitRf: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishInhibitRfResponse.
 * Use `create(DishInhibitRfResponseSchema)` to create a new message.
 */
export const DishInhibitRfResponseSchema: GenMessage<DishInhibitRfResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 31);

/**
 * @generated from message SpaceX.API.Device.DishInhibitGpsRequest
 */
export type DishInhibitGpsRequest = Message<"SpaceX.API.Device.DishInhibitGpsRequest"> & {
  /**
   * @generated from field: bool inhibit_gps = 1;
   */
  inhibitGps: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishInhibitGpsRequest.
 * Use `create(DishInhibitGpsRequestSchema)` to create a new message.
 */
export const DishInhibitGpsRequestSchema: GenMessage<DishInhibitGpsRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 32);

/**
 * @generated from message SpaceX.API.Device.DishInhibitGpsResponse
 */
export type DishInhibitGpsResponse = Message<"SpaceX.API.Device.DishInhibitGpsResponse"> & {
  /**
   * @generated from field: bool inhibit_gps = 1;
   */
  inhibitGps: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishInhibitGpsResponse.
 * Use `create(DishInhibitGpsResponseSchema)` to create a new message.
 */
export const DishInhibitGpsResponseSchema: GenMessage<DishInhibitGpsResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 33);

/**
 * @generated from message SpaceX.API.Device.DishGetDataRequest
 */
export type DishGetDataRequest = Message<"SpaceX.API.Device.DishGetDataRequest"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;
};

/**
 * Describes the message SpaceX.API.Device.DishGetDataRequest.
 * Use `create(DishGetDataRequestSchema)` to create a new message.
 */
export const DishGetDataRequestSchema: GenMessage<DishGetDataRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 34);

/**
 * @generated from message SpaceX.API.Device.DishClearObstructionMapRequest
 */
export type DishClearObstructionMapRequest = Message<"SpaceX.API.Device.DishClearObstructionMapRequest"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishClearObstructionMapRequest.
 * Use `create(DishClearObstructionMapRequestSchema)` to create a new message.
 */
export const DishClearObstructionMapRequestSchema: GenMessage<DishClearObstructionMapRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 35);

/**
 * @generated from message SpaceX.API.Device.DishClearObstructionMapResponse
 */
export type DishClearObstructionMapResponse = Message<"SpaceX.API.Device.DishClearObstructionMapResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishClearObstructionMapResponse.
 * Use `create(DishClearObstructionMapResponseSchema)` to create a new message.
 */
export const DishClearObstructionMapResponseSchema: GenMessage<DishClearObstructionMapResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 36);

/**
 * @generated from message SpaceX.API.Device.DishActivateRssiScanRequest
 */
export type DishActivateRssiScanRequest = Message<"SpaceX.API.Device.DishActivateRssiScanRequest"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishActivateRssiScan scan_query = 1;
   */
  scanQuery?: DishActivateRssiScan;
};

/**
 * Describes the message SpaceX.API.Device.DishActivateRssiScanRequest.
 * Use `create(DishActivateRssiScanRequestSchema)` to create a new message.
 */
export const DishActivateRssiScanRequestSchema: GenMessage<DishActivateRssiScanRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 37);

/**
 * @generated from message SpaceX.API.Device.DishActivateRssiScanResponse
 */
export type DishActivateRssiScanResponse = Message<"SpaceX.API.Device.DishActivateRssiScanResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishActivateRssiScanResponse.
 * Use `create(DishActivateRssiScanResponseSchema)` to create a new message.
 */
export const DishActivateRssiScanResponseSchema: GenMessage<DishActivateRssiScanResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 38);

/**
 * @generated from message SpaceX.API.Device.DishGetRssiScanResultRequest
 */
export type DishGetRssiScanResultRequest = Message<"SpaceX.API.Device.DishGetRssiScanResultRequest"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishGetRssiScanResultRequest.
 * Use `create(DishGetRssiScanResultRequestSchema)` to create a new message.
 */
export const DishGetRssiScanResultRequestSchema: GenMessage<DishGetRssiScanResultRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 39);

/**
 * @generated from message SpaceX.API.Device.DishGetRssiScanResultResponse
 */
export type DishGetRssiScanResultResponse = Message<"SpaceX.API.Device.DishGetRssiScanResultResponse"> & {
  /**
   * @generated from field: SpaceX.API.Device.DishGetRssiScanResult result = 1;
   */
  result?: DishGetRssiScanResult;
};

/**
 * Describes the message SpaceX.API.Device.DishGetRssiScanResultResponse.
 * Use `create(DishGetRssiScanResultResponseSchema)` to create a new message.
 */
export const DishGetRssiScanResultResponseSchema: GenMessage<DishGetRssiScanResultResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 40);

/**
 * @generated from message SpaceX.API.Device.DishFactoryResetRequest
 */
export type DishFactoryResetRequest = Message<"SpaceX.API.Device.DishFactoryResetRequest"> & {
  /**
   * @generated from field: bool app_reset = 1;
   */
  appReset: boolean;
};

/**
 * Describes the message SpaceX.API.Device.DishFactoryResetRequest.
 * Use `create(DishFactoryResetRequestSchema)` to create a new message.
 */
export const DishFactoryResetRequestSchema: GenMessage<DishFactoryResetRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 41);

/**
 * @generated from message SpaceX.API.Device.DishFactoryResetResponse
 */
export type DishFactoryResetResponse = Message<"SpaceX.API.Device.DishFactoryResetResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.DishFactoryResetResponse.
 * Use `create(DishFactoryResetResponseSchema)` to create a new message.
 */
export const DishFactoryResetResponseSchema: GenMessage<DishFactoryResetResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 42);

/**
 * @generated from message SpaceX.API.Device.ResetButtonRequest
 */
export type ResetButtonRequest = Message<"SpaceX.API.Device.ResetButtonRequest"> & {
  /**
   * @generated from field: bool pressed = 1;
   */
  pressed: boolean;
};

/**
 * Describes the message SpaceX.API.Device.ResetButtonRequest.
 * Use `create(ResetButtonRequestSchema)` to create a new message.
 */
export const ResetButtonRequestSchema: GenMessage<ResetButtonRequest> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 43);

/**
 * @generated from message SpaceX.API.Device.ResetButtonResponse
 */
export type ResetButtonResponse = Message<"SpaceX.API.Device.ResetButtonResponse"> & {
};

/**
 * Describes the message SpaceX.API.Device.ResetButtonResponse.
 * Use `create(ResetButtonResponseSchema)` to create a new message.
 */
export const ResetButtonResponseSchema: GenMessage<ResetButtonResponse> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 44);

/**
 * @generated from message SpaceX.API.Device.PLCStats
 */
export type PLCStats = Message<"SpaceX.API.Device.PLCStats"> & {
  /**
   * @generated from field: bool receiving_plc = 1;
   */
  receivingPlc: boolean;

  /**
   * @generated from field: uint32 average_time_to_empty = 2;
   */
  averageTimeToEmpty: number;

  /**
   * @generated from field: uint32 average_time_to_full = 3;
   */
  averageTimeToFull: number;

  /**
   * @generated from field: uint32 battery_health = 4;
   */
  batteryHealth: number;

  /**
   * @generated from field: uint32 hardware_revision_id = 5;
   */
  hardwareRevisionId: number;

  /**
   * @generated from field: bool permanent_failure = 6;
   */
  permanentFailure: boolean;

  /**
   * @generated from field: SpaceX.API.Device.PLCPortStats port_1_stats = 7;
   */
  port1Stats?: PLCPortStats;

  /**
   * @generated from field: SpaceX.API.Device.PLCPortStats port_2_stats = 8;
   */
  port2Stats?: PLCPortStats;

  /**
   * @generated from field: SpaceX.API.Device.PLCPortStats port_3_stats = 9;
   */
  port3Stats?: PLCPortStats;

  /**
   * @generated from field: SpaceX.API.Device.PLCStats.ProtocolRevision plc_revision = 10;
   */
  plcRevision: PLCStats_ProtocolRevision;

  /**
   * @generated from field: bool safety_mode_active = 11;
   */
  safetyModeActive: boolean;

  /**
   * @generated from field: uint32 state_of_charge = 12;
   */
  stateOfCharge: number;

  /**
   * @generated from field: uint32 thermal_throttle_level = 13;
   */
  thermalThrottleLevel: number;
};

/**
 * Describes the message SpaceX.API.Device.PLCStats.
 * Use `create(PLCStatsSchema)` to create a new message.
 */
export const PLCStatsSchema: GenMessage<PLCStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 45);

/**
 * @generated from enum SpaceX.API.Device.PLCStats.ProtocolRevision
 */
export enum PLCStats_ProtocolRevision {
  /**
   * @generated from enum value: REV_D = 0;
   */
  REV_D = 0,
}

/**
 * Describes the enum SpaceX.API.Device.PLCStats.ProtocolRevision.
 */
export const PLCStats_ProtocolRevisionSchema: GenEnum<PLCStats_ProtocolRevision> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 45, 0);

/**
 * @generated from message SpaceX.API.Device.PLCPortStats
 */
export type PLCPortStats = Message<"SpaceX.API.Device.PLCPortStats"> & {
  /**
   * @generated from field: uint32 power = 1;
   */
  power: number;

  /**
   * @generated from field: SpaceX.API.Device.PLCPortStats.PortStatus status = 2;
   */
  status: PLCPortStats_PortStatus;
};

/**
 * Describes the message SpaceX.API.Device.PLCPortStats.
 * Use `create(PLCPortStatsSchema)` to create a new message.
 */
export const PLCPortStatsSchema: GenMessage<PLCPortStats> = /*@__PURE__*/
  messageDesc(file_spacex_api_device_dish, 46);

/**
 * @generated from enum SpaceX.API.Device.PLCPortStats.PortStatus
 */
export enum PLCPortStats_PortStatus {
  /**
   * @generated from enum value: INACTIVE = 0;
   */
  INACTIVE = 0,

  /**
   * @generated from enum value: CHARGING = 1;
   */
  CHARGING = 1,

  /**
   * @generated from enum value: DISCHARGING = 2;
   */
  DISCHARGING = 2,

  /**
   * @generated from enum value: MOISTURE_DETECTED = 3;
   */
  MOISTURE_DETECTED = 3,
}

/**
 * Describes the enum SpaceX.API.Device.PLCPortStats.PortStatus.
 */
export const PLCPortStats_PortStatusSchema: GenEnum<PLCPortStats_PortStatus> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 46, 0);

/**
 * @generated from enum SpaceX.API.Device.UserMobilityClass
 */
export enum UserMobilityClass {
  /**
   * @generated from enum value: STATIONARY = 0;
   */
  STATIONARY = 0,

  /**
   * @generated from enum value: NOMADIC = 1;
   */
  NOMADIC = 1,

  /**
   * @generated from enum value: MOBILE = 2;
   */
  MOBILE = 2,
}

/**
 * Describes the enum SpaceX.API.Device.UserMobilityClass.
 */
export const UserMobilityClassSchema: GenEnum<UserMobilityClass> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 0);

/**
 * @generated from enum SpaceX.API.Device.ObstructionMapReferenceFrame
 */
export enum ObstructionMapReferenceFrame {
  /**
   * @generated from enum value: FRAME_UNKNOWN = 0;
   */
  FRAME_UNKNOWN = 0,

  /**
   * @generated from enum value: FRAME_EARTH = 1;
   */
  FRAME_EARTH = 1,

  /**
   * @generated from enum value: FRAME_UT = 2;
   */
  FRAME_UT = 2,
}

/**
 * Describes the enum SpaceX.API.Device.ObstructionMapReferenceFrame.
 */
export const ObstructionMapReferenceFrameSchema: GenEnum<ObstructionMapReferenceFrame> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 1);

/**
 * @generated from enum SpaceX.API.Device.SoftwareUpdateState
 */
export enum SoftwareUpdateState {
  /**
   * @generated from enum value: SOFTWARE_UPDATE_STATE_UNKNOWN = 0;
   */
  SOFTWARE_UPDATE_STATE_UNKNOWN = 0,

  /**
   * @generated from enum value: IDLE = 1;
   */
  IDLE = 1,

  /**
   * @generated from enum value: FETCHING = 2;
   */
  FETCHING = 2,

  /**
   * @generated from enum value: PRE_CHECK = 3;
   */
  PRE_CHECK = 3,

  /**
   * @generated from enum value: WRITING = 4;
   */
  WRITING = 4,

  /**
   * @generated from enum value: POST_CHECK = 5;
   */
  POST_CHECK = 5,

  /**
   * @generated from enum value: REBOOT_REQUIRED = 6;
   */
  REBOOT_REQUIRED = 6,

  /**
   * @generated from enum value: DISABLED = 7;
   */
  DISABLED = 7,

  /**
   * @generated from enum value: FAULTED = 8;
   */
  FAULTED = 8,
}

/**
 * Describes the enum SpaceX.API.Device.SoftwareUpdateState.
 */
export const SoftwareUpdateStateSchema: GenEnum<SoftwareUpdateState> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 2);

/**
 * @generated from enum SpaceX.API.Device.UserClassOfService
 */
export enum UserClassOfService {
  /**
   * @generated from enum value: UNKNOWN_USER_CLASS_OF_SERVICE = 0;
   */
  UNKNOWN_USER_CLASS_OF_SERVICE = 0,

  /**
   * @generated from enum value: CONSUMER = 1;
   */
  CONSUMER = 1,

  /**
   * @generated from enum value: BUSINESS = 2;
   */
  BUSINESS = 2,

  /**
   * @generated from enum value: BUSINESS_PLUS = 3;
   */
  BUSINESS_PLUS = 3,

  /**
   * @generated from enum value: COMMERCIAL_AVIATION = 4;
   */
  COMMERCIAL_AVIATION = 4,
}

/**
 * Describes the enum SpaceX.API.Device.UserClassOfService.
 */
export const UserClassOfServiceSchema: GenEnum<UserClassOfService> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 3);

/**
 * @generated from enum SpaceX.API.Device.HasActuators
 */
export enum HasActuators {
  /**
   * @generated from enum value: HAS_ACTUATORS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HAS_ACTUATORS_YES = 1;
   */
  YES = 1,

  /**
   * @generated from enum value: HAS_ACTUATORS_NO = 2;
   */
  NO = 2,
}

/**
 * Describes the enum SpaceX.API.Device.HasActuators.
 */
export const HasActuatorsSchema: GenEnum<HasActuators> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 4);

/**
 * @generated from enum SpaceX.API.Device.ActuatorState
 */
export enum ActuatorState {
  /**
   * @generated from enum value: ACTUATOR_STATE_IDLE = 0;
   */
  IDLE = 0,

  /**
   * @generated from enum value: ACTUATOR_STATE_FULL_TILT = 1;
   */
  FULL_TILT = 1,

  /**
   * @generated from enum value: ACTUATOR_STATE_ROTATE = 2;
   */
  ROTATE = 2,

  /**
   * @generated from enum value: ACTUATOR_STATE_TILT = 3;
   */
  TILT = 3,

  /**
   * @generated from enum value: ACTUATOR_STATE_UNWRAP_POSITIVE = 4;
   */
  UNWRAP_POSITIVE = 4,

  /**
   * @generated from enum value: ACTUATOR_STATE_UNWRAP_NEGATIVE = 5;
   */
  UNWRAP_NEGATIVE = 5,

  /**
   * @generated from enum value: ACTUATOR_STATE_TILT_TO_STOWED = 6;
   */
  TILT_TO_STOWED = 6,

  /**
   * @generated from enum value: ACTUATOR_STATE_FAULTED = 7;
   */
  FAULTED = 7,

  /**
   * @generated from enum value: ACTUATOR_STATE_WAIT_TIL_STATIC = 8;
   */
  WAIT_TIL_STATIC = 8,

  /**
   * @generated from enum value: ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION = 9;
   */
  DRIVE_TO_MOBILE_POSITION = 9,

  /**
   * @generated from enum value: ACTUATOR_STATE_MOBILE_WAIT = 10;
   */
  MOBILE_WAIT = 10,
}

/**
 * Describes the enum SpaceX.API.Device.ActuatorState.
 */
export const ActuatorStateSchema: GenEnum<ActuatorState> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 5);

/**
 * @generated from enum SpaceX.API.Device.AttitudeEstimationState
 */
export enum AttitudeEstimationState {
  /**
   * @generated from enum value: FILTER_RESET = 0;
   */
  FILTER_RESET = 0,

  /**
   * @generated from enum value: FILTER_UNCONVERGED = 1;
   */
  FILTER_UNCONVERGED = 1,

  /**
   * @generated from enum value: FILTER_CONVERGED = 2;
   */
  FILTER_CONVERGED = 2,

  /**
   * @generated from enum value: FILTER_FAULTED = 3;
   */
  FILTER_FAULTED = 3,

  /**
   * @generated from enum value: FILTER_INVALID = 4;
   */
  FILTER_INVALID = 4,
}

/**
 * Describes the enum SpaceX.API.Device.AttitudeEstimationState.
 */
export const AttitudeEstimationStateSchema: GenEnum<AttitudeEstimationState> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 6);

/**
 * @generated from enum SpaceX.API.Device.RebootReason
 */
export enum RebootReason {
  /**
   * @generated from enum value: REBOOT_REASON_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: REBOOT_REASON_MANUAL = 1;
   */
  MANUAL = 1,

  /**
   * @generated from enum value: REBOOT_REASON_LOSS_OF_COMM = 2;
   */
  LOSS_OF_COMM = 2,

  /**
   * @generated from enum value: REBOOT_REASON_SWUPDATE_NOW = 3;
   */
  SWUPDATE_NOW = 3,

  /**
   * @generated from enum value: REBOOT_REASON_SWUPDATE_SCHEDULED = 4;
   */
  SWUPDATE_SCHEDULED = 4,

  /**
   * @generated from enum value: REBOOT_REASON_APP = 5;
   */
  APP = 5,

  /**
   * @generated from enum value: REBOOT_REASON_EMC = 6;
   */
  EMC = 6,

  /**
   * @generated from enum value: REBOOT_REASON_FACTORY_RESET = 7;
   */
  FACTORY_RESET = 7,

  /**
   * @generated from enum value: REBOOT_REASON_TEST_CASE = 8;
   */
  TEST_CASE = 8,

  /**
   * @generated from enum value: REBOOT_REASON_THERMAL_POWER_CUT = 9;
   */
  THERMAL_POWER_CUT = 9,

  /**
   * @generated from enum value: REBOOT_REASON_CRITICAL_PROCESS_DIED = 10;
   */
  CRITICAL_PROCESS_DIED = 10,

  /**
   * @generated from enum value: REBOOT_REASON_NO_RF_READY = 11;
   */
  NO_RF_READY = 11,

  /**
   * @generated from enum value: REBOOT_REASON_POSTPONED_LOSS_OF_COMM = 12;
   */
  POSTPONED_LOSS_OF_COMM = 12,

  /**
   * @generated from enum value: REBOOT_REASON_SWUPDATE_STATIONARY = 13;
   */
  SWUPDATE_STATIONARY = 13,

  /**
   * @generated from enum value: REBOOT_REASON_AAP_CRASH = 14;
   */
  AAP_CRASH = 14,

  /**
   * @generated from enum value: REBOOT_REASON_XP70_SACS = 15;
   */
  XP70_SACS = 15,

  /**
   * @generated from enum value: REBOOT_REASON_INE_FAILED = 16;
   */
  INE_FAILED = 16,

  /**
   * @generated from enum value: REBOOT_REASON_KERNEL_TAINTED = 17;
   */
  KERNEL_TAINTED = 17,
}

/**
 * Describes the enum SpaceX.API.Device.RebootReason.
 */
export const RebootReasonSchema: GenEnum<RebootReason> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 7);

/**
 * @generated from enum SpaceX.API.Device.RouterRole
 */
export enum RouterRole {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONTROLLER = 1;
   */
  CONTROLLER = 1,

  /**
   * @generated from enum value: REPEATER = 2;
   */
  REPEATER = 2,

  /**
   * @generated from enum value: BYPASSED = 3;
   */
  BYPASSED = 3,
}

/**
 * Describes the enum SpaceX.API.Device.RouterRole.
 */
export const RouterRoleSchema: GenEnum<RouterRole> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 8);

/**
 * @generated from enum SpaceX.API.Device.DishState
 */
export enum DishState {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: CONNECTED = 1;
   */
  CONNECTED = 1,

  /**
   * @generated from enum value: SEARCHING = 2;
   */
  SEARCHING = 2,

  /**
   * @generated from enum value: BOOTING = 3;
   */
  BOOTING = 3,
}

/**
 * Describes the enum SpaceX.API.Device.DishState.
 */
export const DishStateSchema: GenEnum<DishState> = /*@__PURE__*/
  enumDesc(file_spacex_api_device_dish, 9);

